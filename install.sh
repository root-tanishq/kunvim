#!/bin/bash

# Creating directory of neovim configuration
echo "[+] Removing Old configuration File"
rm -rf ~/.config/nvim/ ~/.cache/nvim/ ~/.local/share/nvim/
mkdir -p ~/.config/nvim

# Checking and installing neovim and fzf package
if [[ $(which nvim &>/dev/null ; which fzf &>/dev/null; echo $?) != 0 ]];
then
  if [[ $(which apt &>/dev/null ; echo $?) == 0 ]];
  then
    sudo apt install neovim fzf -y;
  elif [[ $(which yum &>/dev/null ; echo $?) == 0 ]];
  then
    sudo yum -y install neovim fzf;
  elif [[ $(which pacman &>/dev/null ; echo $? ) == 0 ]];
  then
    sudo pacman -S neovim fzf;
  else
    echo "[+] Can not installed package neovim and fzf"
  fi
fi

# Installing plugins and vim plug
sh -c 'curl -sfLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'

# Putting init.vim file
echo "IiBWaW0tUGx1ZyBJbnN0YWxsaW5nIFBsdWdpbnMKY2FsbCBwbHVnI2JlZ2luKCkKUGx1ZyAnaXRjaHlueS9saWdodGxpbmUudmltJwpQbHVnICd0cG9wZS92aW0tc2Vuc2libGUnClBsdWcgJ2p1bmVndW5uL2Z6Zi52aW0nClBsdWcgJ2p1bmVndW5uL2Z6ZicsIHsgJ2RvJzogeyAtPiBmemYjaW5zdGFsbCgpIH0gfQpQbHVnICdwcmVzZXJ2aW0vbmVyZHRyZWUnClBsdWcgJ21oaW56L3ZpbS1zdGFydGlmeScKUGx1ZyAnbW9yaGV0ei9ncnV2Ym94JwpQbHVnICdTaG91Z28vZGVvcGxldGUubnZpbScsIHsgJ2RvJzogJzpVcGRhdGVSZW1vdGVQbHVnaW5zJyB9ClBsdWcgJ2doaWZhcml0NTMvdG9reW9uaWdodC12aW0nClBsdWcgJ3pjaGVlL2Rlb3BsZXRlLWplZGknCmNhbGwgcGx1ZyNlbmQoKQoKIiBOZXJkVHJlZSBjb25maWd1cmF0aW9uCm5ub3JlbWFwIDxzaWxlbnQ+IDxGMj4gOk5FUkRUcmVlVG9nZ2xlPENSPgpubm9yZW1hcCA8c2lsZW50PiA8RjE+IDpORVJEVHJlZTxDUj4KCiIgTXkgb3RoZXIgYmFzaWMgY29uZmlndXJhdGlvbiAKc2V0IG51bWJlcgpzZXQgZXhwYW5kdGFiCnNldCBhdXRvaW5kZW50CnNldCBzb2Z0dGFic3RvcD00CnNldCBzaGlmdHdpZHRoPTIKc2V0IHRhYnN0b3A9NApzZXQgc2Nyb2xsb2ZmPTcKc2V0IG1vdXNlPWEKc2V0IGd1aWN1cnNvcj0gCmlub3JlbWFwIDxTLVRhYj4gPEMtZD4Kc2V0IGxpc3QgbGlzdGNoYXJzPXRhYjo+XCAsdHJhaWw6Kyxlb2w6JApzZXQgd2hpY2h3cmFwKz08LD4sWyxdCm5ub3JlbWFwIDxzaWxlbnQ+IDxDLUxlZnQ+IDp0YWJwcmV2aW91czxDUj4Kbm5vcmVtYXAgPHNpbGVudD4gPEMtUmlnaHQ+IDp0YWJuZXh0PENSPgpubm9yZW1hcCA8c2lsZW50PiA8Qy1VcD4gOnNwbGl0PENSPgpubm9yZW1hcCA8c2lsZW50PiA8Qy1Eb3duPiA6dnNwbGl0PENSPgpubm9yZW1hcCA8c2lsZW50PiA8Qy1UPiA6dGFiZTxDUj4Kbm5vcmVtYXAgPHNpbGVudD4gPEMtcT4gOnEhPENSPgpubm9yZW1hcCA8c2lsZW50PiA8Qy1zPiA6dzxDUj4Kdm1hcCA8Qy15PiAiK3kKbm5vcmVtYXAgPHNpbGVudD4gPFNwYWNlPiA6bjxDUj4Kbm5vcmVtYXAgPHNpbGVudD4gPEJhY2tTcGFjZT4gOk48Q1I+Cm5ub3JlbWFwIDxzaWxlbnQ+IDxDLWY+IDpGaWxlcyAvPENSPiAKc2V0IG5vc2hvd21vZGUKc2V0IG51bWJlciByZWxhdGl2ZW51bWJlcgpsZXQgZzpkZW9wbGV0ZSNlbmFibGVfYXRfc3RhcnR1cCA9IDEKc2V0IHNwbGl0YmVsb3cKYXV0b2NtZCBJbnNlcnRMZWF2ZSxDb21wbGV0ZURvbmUgKiBpZiBwdW12aXNpYmxlKCkgPT0gMCB8IHBjbG9zZSB8IGVuZGlmCmlub3JlbWFwIDxleHByPjx0YWI+IHB1bXZpc2libGUoKSA/ICJcPGMtbj4iIDogIlw8dGFiPiIKY29tbWFuZCEgLW5hcmdzPSogVyB3CnNldCBjb21wbGV0ZSs9a3NwZWxsCnNldCBjb21wbGV0ZW9wdD1tZW51b25lLGxvbmdlc3QKbGV0ICRGWkZfREVGQVVMVF9DT01NQU5EID0gJ2ZpbmQgLiAtdHlwZSBmJwpzZXQgY3Vyc29ybGluZQpzZXQgZ3VpY3Vyc29yPW4tdi1jLXNtOmJsb2NrLGktY2ktdmU6dmVyMjUtQ3Vyc29yLHItY3Itbzpob3IyMApzZXQgdGVybWd1aWNvbG9ycwpjb2xvcnNjaGVtZSB0b2t5b25pZ2h0CmxldCBnOnRva3lvbmlnaHRfc3R5bGUgPSAnbmlnaHQnCmxldCBnOnRva3lvbmlnaHRfZW5hYmxlX2l0YWxpYyA9IDEKIiBjaGVja3MgaWYgeW91ciB0ZXJtaW5hbCBoYXMgMjQtYml0IGNvbG9yIHN1cHBvcnQKaWYgKGhhcygidGVybWd1aWNvbG9ycyIpKQogICAgc2V0IHRlcm1ndWljb2xvcnMKICAgIGhpIExpbmVOciBjdGVybWJnPU5PTkUgZ3VpYmc9Tk9ORQplbmRpZgpsZXQgZzpsaWdodGxpbmUgPSB7CiAgICBcICdjb2xvcnNjaGVtZSc6ICd0b2t5b25pZ2h0JywKICAgIFwgJ2NvbXBvbmVudCc6IHsKICAgIFwgICAnbGluZWluZm8nOiAn7oKhICUzbDolLTJ2JywKICAgIFwgfSwKICAgIFwgJ2NvbXBvbmVudF9mdW5jdGlvbic6IHsKICAgIFwgICAncmVhZG9ubHknOiAnTGlnaHRsaW5lUmVhZG9ubHknLAogICAgXCAgICdmdWdpdGl2ZSc6ICdMaWdodGxpbmVGdWdpdGl2ZScKICAgIFwgfSwKICAgIFwgJ3NlcGFyYXRvcic6IHsgJ2xlZnQnOiAn7oKwJywgJ3JpZ2h0JzogJ+6CsicgfSwKICAgIFwgJ3N1YnNlcGFyYXRvcic6IHsgJ2xlZnQnOiAn7oKxJywgJ3JpZ2h0JzogJ+6CsycgfQogICBcIH0KZnVuY3Rpb24hIExpZ2h0bGluZVJlYWRvbmx5KCkKICAgIHJldHVybiAmcmVhZG9ubHkgPyAn75GWJyA6ICcnCmVuZGZ1bmN0aW9uCmZ1bmN0aW9uISBMaWdodGxpbmVGdWdpdGl2ZSgpCiAgICBpZiBleGlzdHMoJypmdWdpdGl2ZSNoZWFkJykKICAgICAgICBsZXQgYnJhbmNoID0gZnVnaXRpdmUjaGVhZCgpCiAgICAgICAgcmV0dXJuIGJyYW5jaCAhPSMgJycgPyAn7oKgJy5icmFuY2ggOiAnJwogICAgZW5kaWYKICAgIHJldHVybiAnJwplbmRmdW5jdGlvbgo=" | base64 -d > ~/.config/nvim/init.vim

if [[ $(which pip &>/dev/null | echo $?) == 0 ]];
then
  sudo pip install pynvim
  sudo pip install jedi
else
  echo "[+] Install python3 - pip and run the script again"
  exit 1
fi

echo "$(for msg in `seq 150`;do echo '[*] Dont close the tab it will get back to your normal terminal once its finished';done)" | nvim -c ":PlugInstall | qa!" - 
echo "$(for msg in `seq 150`;do echo '[*] Dont close the tab it will get back to your normal terminal once its finished';done)" | nvim -c ":UpdateRemotePlugins | qa!" - 

echo "IiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoiIE5hbWU6ICAgICAgICAgVG9reW8gTmlnaHQKIiBEZXNjcmlwdGlvbjogIEEgY2xlYW4sIGRhcmsgVmltIHRoZW1lIHRoYXQgY2VsZWJyYXRlcyB0aGUgbGlnaHRzIG9mIGRvd250b3duIFRva3lvIGF0IG5pZ2h0IChCYXNlZCBvbiB0aGUgVlMgQ29kZSB2ZXJzaW9uIG9mIHRoZSB0aGVtZSkKIiBBdXRob3I6ICAgICAgIEdoaWZhcmkgVGFxaXVkZGluIDxtZ2hpZmFyaXQ1M0BnbWFpbC5jb20+CiIgV2Vic2l0ZTogICAgICBodHRwczovL2dpdGh1Yi5jb20vZ2hpZmFyaXQ1My90b2t5b25pZ2h0LnZpbS8KIiBMaWNlbnNlOiAgICAgIE1JVAoiIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgoiIEluaXRpYWxpemF0aW9uOiB7e3sKaGlnaGxpZ2h0IGNsZWFyCmlmIGV4aXN0cygnc3ludGF4X29uJykKICBzeW50YXggcmVzZXQKZW5kaWYKc2V0IGJhY2tncm91bmQ9ZGFyawoKbGV0IHM6dF9DbyA9IGV4aXN0cygnJnRfQ28nKSAmJiAhZW1wdHkoJnRfQ28pICYmICZ0X0NvID4gMSA/ICZ0X0NvIDogMgpsZXQgczp0bXV4ID0gZXhlY3V0YWJsZSgndG11eCcpICYmICRUTVVYICE9IyAnJwoKbGV0IGc6Y29sb3JzX25hbWUgPSAndG9reW9uaWdodCcKIiB9fX0KIiBDb25maWd1cmF0aW9uOiB7e3sKbGV0IHM6Y29uZmlndXJhdGlvbiA9IHt9CmxldCBzOmNvbmZpZ3VyYXRpb24uc3R5bGUgPSBnZXQoZzosICd0b2t5b25pZ2h0X3N0eWxlJywgJ25pZ2h0JykKbGV0IHM6Y29uZmlndXJhdGlvbi50cmFuc3BhcmVudF9iYWNrZ3JvdW5kID0gZ2V0KGc6LCAndG9reW9uaWdodF90cmFuc3BhcmVudF9iYWNrZ3JvdW5kJywgMCkKbGV0IHM6Y29uZmlndXJhdGlvbi5tZW51X3NlbGVjdGlvbl9iYWNrZ3JvdW5kID0gZ2V0KGc6LCAndG9reW9uaWdodF9tZW51X3NlbGVjdGlvbl9iYWNrZ3JvdW5kJywgJ2dyZWVuJykKbGV0IHM6Y29uZmlndXJhdGlvbi5kaXNhYmxlX2l0YWxpY19jb21tZW50ID0gZ2V0KGc6LCAndG9reW9uaWdodF9kaXNhYmxlX2l0YWxpY19jb21tZW50JywgMCkKbGV0IHM6Y29uZmlndXJhdGlvbi5lbmFibGVfaXRhbGljID0gZ2V0KGc6LCAndG9reW9uaWdodF9lbmFibGVfaXRhbGljJywgMCkKbGV0IHM6Y29uZmlndXJhdGlvbi5jdXJzb3IgPSBnZXQoZzosICd0b2t5b25pZ2h0X2N1cnNvcicsICdhdXRvJykKbGV0IHM6Y29uZmlndXJhdGlvbi5jdXJyZW50X3dvcmQgPSBnZXQoZzosICd0b2t5b25pZ2h0X2N1cnJlbnRfd29yZCcsIGdldChnOiwgJ3Rva3lvbmlnaHRfdHJhbnNwYXJlbnRfYmFja2dyb3VuZCcsIDApID09IDAgPyAnZ3JleSBiYWNrZ3JvdW5kJyA6ICdib2xkJykKIiB9fX0KIiBQYWxldHRlOiB7e3sKIgppZiBzOmNvbmZpZ3VyYXRpb24uc3R5bGUgPT0jICduaWdodCcKICBsZXQgczpwYWxldHRlID0gewogICAgICAgIFwgJ2JsYWNrJzogICAgICBbJyMwNjA4MGEnLCAgICcyMzcnLCAgJ0RhcmtHcmV5J10sCiAgICAgICAgXCAnYmcwJzogICAgICAgIFsnIzFhMWIyNicsICAgJzIzNScsICAnQmxhY2snXSwKICAgICAgICBcICdiZzEnOiAgICAgICAgWycjMjMyNDMzJywgICAnMjM2JywgICdEYXJrR3JleSddLAogICAgICAgIFwgJ2JnMic6ICAgICAgICBbJyMyYTJiM2QnLCAgICcyMzYnLCAgJ0RhcmtHcmV5J10sCiAgICAgICAgXCAnYmczJzogICAgICAgIFsnIzMyMzQ0YScsICAgJzIzNycsICAnRGFya0dyZXknXSwKICAgICAgICBcICdiZzQnOiAgICAgICAgWycjM2IzZDU3JywgICAnMjM3JywgICdHcmV5J10sCiAgICAgICAgXCAnYmdfcmVkJzogICAgIFsnI2ZmN2E5MycsICAgJzIwMycsICAnUmVkJ10sCiAgICAgICAgXCAnZGlmZl9yZWQnOiAgIFsnIzgwM2Q0OScsICAgJzUyJywgICAnRGFya1JlZCddLAogICAgICAgIFwgJ2JnX2dyZWVuJzogICBbJyNiOWYyN2MnLCAgICcxMDcnLCAgJ0dyZWVuJ10sCiAgICAgICAgXCAnZGlmZl9ncmVlbic6IFsnIzYxODA0MScsICAgJzIyJywgICAnRGFya0dyZWVuJ10sCiAgICAgICAgXCAnYmdfYmx1ZSc6ICAgIFsnIzdkYTZmZicsICAgJzExMCcsICAnQmx1ZSddLAogICAgICAgIFwgJ2RpZmZfYmx1ZSc6ICBbJyMzZTUzODAnLCAgICcxNycsICAgJ0RhcmtCbHVlJ10sCiAgICAgICAgXCAnZmcnOiAgICAgICAgIFsnI2E5YjFkNicsICAgJzI1MCcsICAnV2hpdGUnXSwKICAgICAgICBcICdyZWQnOiAgICAgICAgWycjRjc3NjhFJywgICAnMjAzJywgICdSZWQnXSwKICAgICAgICBcICdvcmFuZ2UnOiAgICAgWycjRkY5RTY0JywgICAnMjE1JywgICdPcmFuZ2UnXSwKICAgICAgICBcICd5ZWxsb3cnOiAgICAgWycjRTBBRjY4JywgICAnMTc5JywgICdZZWxsb3cnXSwKICAgICAgICBcICdncmVlbic6ICAgICAgWycjOUVDRTZBJywgICAnMTA3JywgICdHcmVlbiddLAogICAgICAgIFwgJ2JsdWUnOiAgICAgICBbJyM3QUEyRjcnLCAgICcxMTAnLCAgJ0JsdWUnXSwKICAgICAgICBcICdwdXJwbGUnOiAgICAgWycjYWQ4ZWU2JywgICAnMTc2JywgICdNYWdlbnRhJ10sCiAgICAgICAgXCAnZ3JleSc6ICAgICAgIFsnIzk3OWViZicsICAgJzI0NicsICAnTGlnaHRHcmV5J10sCiAgICAgICAgXCAnbm9uZSc6ICAgICAgIFsnTk9ORScsICAgICAgJ05PTkUnLCAnTk9ORSddCiAgICAgICAgXCB9CmVsc2VpZiBzOmNvbmZpZ3VyYXRpb24uc3R5bGUgPT0jICdzdG9ybScKICBsZXQgczpwYWxldHRlID0gewogICAgICAgIFwgJ2JsYWNrJzogICAgICBbJyMwNjA4MGEnLCAgICcyMzcnLCAgJ0RhcmtHcmV5J10sCiAgICAgICAgXCAnYmcwJzogICAgICAgIFsnIzI0MjgzYicsICAgJzIzNScsICAnQmxhY2snXSwKICAgICAgICBcICdiZzEnOiAgICAgICAgWycjMjgyZDQyJywgICAnMjM2JywgICdEYXJrR3JleSddLAogICAgICAgIFwgJ2JnMic6ICAgICAgICBbJyMyZjM0NGQnLCAgICcyMzYnLCAgJ0RhcmtHcmV5J10sCiAgICAgICAgXCAnYmczJzogICAgICAgIFsnIzMzMzk1NCcsICAgJzIzNycsICAnRGFya0dyZXknXSwKICAgICAgICBcICdiZzQnOiAgICAgICAgWycjM2E0MDVlJywgICAnMjM3JywgICdHcmV5J10sCiAgICAgICAgXCAnYmdfcmVkJzogICAgIFsnI2ZmN2E5MycsICAgJzIwMycsICAnUmVkJ10sCiAgICAgICAgXCAnZGlmZl9yZWQnOiAgIFsnIzgwM2Q0OScsICAgJzUyJywgICAnRGFya1JlZCddLAogICAgICAgIFwgJ2JnX2dyZWVuJzogICBbJyNiOWYyN2MnLCAgICcxMDcnLCAgJ0dyZWVuJ10sCiAgICAgICAgXCAnZGlmZl9ncmVlbic6IFsnIzYxODA0MScsICAgJzIyJywgICAnRGFya0dyZWVuJ10sCiAgICAgICAgXCAnYmdfYmx1ZSc6ICAgIFsnIzdkYTZmZicsICAgJzExMCcsICAnQmx1ZSddLAogICAgICAgIFwgJ2RpZmZfYmx1ZSc6ICBbJyMzZTUzODAnLCAgICcxNycsICAgJ0RhcmtCbHVlJ10sCiAgICAgICAgXCAnZmcnOiAgICAgICAgIFsnI2E5YjFkNicsICAgJzI1MCcsICAnV2hpdGUnXSwKICAgICAgICBcICdyZWQnOiAgICAgICAgWycjRjc3NjhFJywgICAnMjAzJywgICdSZWQnXSwKICAgICAgICBcICdvcmFuZ2UnOiAgICAgWycjRkY5RTY0JywgICAnMjE1JywgICdPcmFuZ2UnXSwKICAgICAgICBcICd5ZWxsb3cnOiAgICAgWycjRTBBRjY4JywgICAnMTc5JywgICdZZWxsb3cnXSwKICAgICAgICBcICdncmVlbic6ICAgICAgWycjOUVDRTZBJywgICAnMTA3JywgICdHcmVlbiddLAogICAgICAgIFwgJ2JsdWUnOiAgICAgICBbJyM3QUEyRjcnLCAgICcxMTAnLCAgJ0JsdWUnXSwKICAgICAgICBcICdwdXJwbGUnOiAgICAgWycjYWQ4ZWU2JywgICAnMTc2JywgICdNYWdlbnRhJ10sCiAgICAgICAgXCAnZ3JleSc6ICAgICAgIFsnIzQ0NEI2QScsICAgJzI0NicsICAnTGlnaHRHcmV5J10sCiAgICAgICAgXCAnbm9uZSc6ICAgICAgIFsnTk9ORScsICAgICAgJ05PTkUnLCAnTk9ORSddCiAgICAgICAgXCB9CmVuZGlmCgoiIH19fQoiIEZ1bmN0aW9uOiB7e3sKIiBjYWxsIHM6SEwoZ3JvdXAsIGZvcmVncm91bmQsIGJhY2tncm91bmQpCiIgY2FsbCBzOkhMKGdyb3VwLCBmb3JlZ3JvdW5kLCBiYWNrZ3JvdW5kLCBndWksIGd1aXNwKQoiCiIgRS5nLjoKIiBjYWxsIHM6SEwoJ05vcm1hbCcsIHM6cGFsZXR0ZS5mZywgczpwYWxldHRlLmJnMCkKCmlmIChoYXMoJ3Rlcm1ndWljb2xvcnMnKSAmJiAmdGVybWd1aWNvbG9ycykgfHwgaGFzKCdndWlfcnVubmluZycpICAiIGd1aWZnIGd1aWJnIGd1aSBjdGVybSBndWlzcAogIGZ1bmN0aW9uISBzOkhMKGdyb3VwLCBmZywgYmcsIC4uLikKICAgIGxldCBobF9zdHJpbmcgPSBbCiAgICAgICAgICBcICdoaWdobGlnaHQnLCBhOmdyb3VwLAogICAgICAgICAgXCAnZ3VpZmc9JyAuIGE6ZmdbMF0sCiAgICAgICAgICBcICdndWliZz0nIC4gYTpiZ1swXSwKICAgICAgICAgIFwgXQogICAgaWYgYTowID49IDEKICAgICAgaWYgYToxID09IyAndW5kZXJjdXJsJwogICAgICAgIGlmICFzOnRtdXgKICAgICAgICAgIGNhbGwgYWRkKGhsX3N0cmluZywgJ2d1aT11bmRlcmN1cmwnKQogICAgICAgIGVsc2UKICAgICAgICAgIGNhbGwgYWRkKGhsX3N0cmluZywgJ2d1aT11bmRlcmxpbmUnKQogICAgICAgIGVuZGlmCiAgICAgICAgY2FsbCBhZGQoaGxfc3RyaW5nLCAnY3Rlcm09dW5kZXJsaW5lJykKICAgICAgZWxzZQogICAgICAgIGNhbGwgYWRkKGhsX3N0cmluZywgJ2d1aT0nIC4gYToxKQogICAgICAgIGNhbGwgYWRkKGhsX3N0cmluZywgJ2N0ZXJtPScgLiBhOjEpCiAgICAgIGVuZGlmCiAgICBlbHNlCiAgICAgIGNhbGwgYWRkKGhsX3N0cmluZywgJ2d1aT1OT05FJykKICAgICAgY2FsbCBhZGQoaGxfc3RyaW5nLCAnY3Rlcm09Tk9ORScpCiAgICBlbmRpZgogICAgaWYgYTowID49IDIKICAgICAgY2FsbCBhZGQoaGxfc3RyaW5nLCAnZ3Vpc3A9JyAuIGE6MlswXSkKICAgIGVuZGlmCiAgICBleGVjdXRlIGpvaW4oaGxfc3RyaW5nLCAnICcpCiAgZW5kZnVuY3Rpb24KZWxzZWlmIHM6dF9DbyA+PSAyNTYgICIgY3Rlcm1mZyBjdGVybWJnIGN0ZXJtCiAgZnVuY3Rpb24hIHM6SEwoZ3JvdXAsIGZnLCBiZywgLi4uKQogICAgbGV0IGhsX3N0cmluZyA9IFsKICAgICAgICAgIFwgJ2hpZ2hsaWdodCcsIGE6Z3JvdXAsCiAgICAgICAgICBcICdjdGVybWZnPScgLiBhOmZnWzFdLAogICAgICAgICAgXCAnY3Rlcm1iZz0nIC4gYTpiZ1sxXSwKICAgICAgICAgIFwgXQogICAgaWYgYTowID49IDEKICAgICAgaWYgYToxID09IyAndW5kZXJjdXJsJwogICAgICAgIGNhbGwgYWRkKGhsX3N0cmluZywgJ2N0ZXJtPXVuZGVybGluZScpCiAgICAgIGVsc2UKICAgICAgICBjYWxsIGFkZChobF9zdHJpbmcsICdjdGVybT0nIC4gYToxKQogICAgICBlbmRpZgogICAgZWxzZQogICAgICBjYWxsIGFkZChobF9zdHJpbmcsICdjdGVybT1OT05FJykKICAgIGVuZGlmCiAgICBleGVjdXRlIGpvaW4oaGxfc3RyaW5nLCAnICcpCiAgZW5kZnVuY3Rpb24KZWxzZSAgIiBjdGVybWZnIGN0ZXJtYmcgY3Rlcm0KICBmdW5jdGlvbiEgczpITChncm91cCwgZmcsIGJnLCAuLi4pCiAgICBsZXQgaGxfc3RyaW5nID0gWwogICAgICAgICAgXCAnaGlnaGxpZ2h0JywgYTpncm91cCwKICAgICAgICAgIFwgJ2N0ZXJtZmc9JyAuIGE6ZmdbMl0sCiAgICAgICAgICBcICdjdGVybWJnPScgLiBhOmJnWzJdLAogICAgICAgICAgXCBdCiAgICBpZiBhOjAgPj0gMQogICAgICBpZiBhOjEgPT0jICd1bmRlcmN1cmwnCiAgICAgICAgY2FsbCBhZGQoaGxfc3RyaW5nLCAnY3Rlcm09dW5kZXJsaW5lJykKICAgICAgZWxzZQogICAgICAgIGNhbGwgYWRkKGhsX3N0cmluZywgJ2N0ZXJtPScgLiBhOjEpCiAgICAgIGVuZGlmCiAgICBlbHNlCiAgICAgIGNhbGwgYWRkKGhsX3N0cmluZywgJ2N0ZXJtPU5PTkUnKQogICAgZW5kaWYKICAgIGV4ZWN1dGUgam9pbihobF9zdHJpbmcsICcgJykKICBlbmRmdW5jdGlvbgplbmRpZgoiIH19fQoKIiBDb21tb24gSGlnaGxpZ2h0IEdyb3Vwczoge3t7CiIgVUk6IHt7ewppZiBzOmNvbmZpZ3VyYXRpb24udHJhbnNwYXJlbnRfYmFja2dyb3VuZAogIGNhbGwgczpITCgnTm9ybWFsJywgczpwYWxldHRlLmZnLCBzOnBhbGV0dGUubm9uZSkKICBjYWxsIHM6SEwoJ1Rlcm1pbmFsJywgczpwYWxldHRlLmZnLCBzOnBhbGV0dGUubm9uZSkKICBjYWxsIHM6SEwoJ0VuZE9mQnVmZmVyJywgczpwYWxldHRlLmJnMCwgczpwYWxldHRlLm5vbmUpCiAgY2FsbCBzOkhMKCdGb2xkQ29sdW1uJywgczpwYWxldHRlLmdyZXksIHM6cGFsZXR0ZS5ub25lKQogIGNhbGwgczpITCgnRm9sZGVkJywgczpwYWxldHRlLmdyZXksIHM6cGFsZXR0ZS5ub25lKQogIGNhbGwgczpITCgnU2lnbkNvbHVtbicsIHM6cGFsZXR0ZS5mZywgczpwYWxldHRlLm5vbmUpCiAgY2FsbCBzOkhMKCdUb29sYmFyTGluZScsIHM6cGFsZXR0ZS5mZywgczpwYWxldHRlLm5vbmUpCmVsc2UKICBjYWxsIHM6SEwoJ05vcm1hbCcsIHM6cGFsZXR0ZS5mZywgczpwYWxldHRlLmJnMCkKICBjYWxsIHM6SEwoJ1Rlcm1pbmFsJywgczpwYWxldHRlLmZnLCBzOnBhbGV0dGUuYmcwKQogIGNhbGwgczpITCgnRW5kT2ZCdWZmZXInLCBzOnBhbGV0dGUuYmcwLCBzOnBhbGV0dGUuYmcwKQogIGNhbGwgczpITCgnRm9sZENvbHVtbicsIHM6cGFsZXR0ZS5ncmV5LCBzOnBhbGV0dGUuYmcxKQogIGNhbGwgczpITCgnRm9sZGVkJywgczpwYWxldHRlLmdyZXksIHM6cGFsZXR0ZS5iZzEpCiAgY2FsbCBzOkhMKCdTaWduQ29sdW1uJywgczpwYWxldHRlLmZnLCBzOnBhbGV0dGUuYmcxKQogIGNhbGwgczpITCgnVG9vbGJhckxpbmUnLCBzOnBhbGV0dGUuZmcsIHM6cGFsZXR0ZS5iZzIpCmVuZGlmCmNhbGwgczpITCgnQ29sb3JDb2x1bW4nLCBzOnBhbGV0dGUubm9uZSwgczpwYWxldHRlLmJnMSkKY2FsbCBzOkhMKCdDb25jZWFsJywgczpwYWxldHRlLmdyZXksIHM6cGFsZXR0ZS5ub25lKQppZiBzOmNvbmZpZ3VyYXRpb24uY3Vyc29yID09IyAnYXV0bycKICBjYWxsIHM6SEwoJ0N1cnNvcicsIHM6cGFsZXR0ZS5ub25lLCBzOnBhbGV0dGUubm9uZSwgJ3JldmVyc2UnKQplbHNlaWYgczpjb25maWd1cmF0aW9uLmN1cnNvciA9PSMgJ3JlZCcKICBjYWxsIHM6SEwoJ0N1cnNvcicsIHM6cGFsZXR0ZS5iZzAsIHM6cGFsZXR0ZS5yZWQpCmVsc2VpZiBzOmNvbmZpZ3VyYXRpb24uY3Vyc29yID09IyAnZ3JlZW4nCiAgY2FsbCBzOkhMKCdDdXJzb3InLCBzOnBhbGV0dGUuYmcwLCBzOnBhbGV0dGUuZ3JlZW4pCmVsc2VpZiBzOmNvbmZpZ3VyYXRpb24uY3Vyc29yID09IyAnYmx1ZScKICBjYWxsIHM6SEwoJ0N1cnNvcicsIHM6cGFsZXR0ZS5iZzAsIHM6cGFsZXR0ZS5ibHVlKQplbmRpZgpoaWdobGlnaHQhIGxpbmsgdkN1cnNvciBDdXJzb3IKaGlnaGxpZ2h0ISBsaW5rIGlDdXJzb3IgQ3Vyc29yCmhpZ2hsaWdodCEgbGluayBsQ3Vyc29yIEN1cnNvcgpoaWdobGlnaHQhIGxpbmsgQ3Vyc29ySU0gQ3Vyc29yCmNhbGwgczpITCgnQ3Vyc29yQ29sdW1uJywgczpwYWxldHRlLm5vbmUsIHM6cGFsZXR0ZS5iZzEpCmNhbGwgczpITCgnQ3Vyc29yTGluZScsIHM6cGFsZXR0ZS5ub25lLCBzOnBhbGV0dGUuYmcxKQpjYWxsIHM6SEwoJ0xpbmVOcicsIHM6cGFsZXR0ZS5ncmV5LCBzOnBhbGV0dGUubm9uZSkKaWYgJnJlbGF0aXZlbnVtYmVyID09IDEgJiYgJmN1cnNvcmxpbmUgPT0gMAogIGNhbGwgczpITCgnQ3Vyc29yTGluZU5yJywgczpwYWxldHRlLmZnLCBzOnBhbGV0dGUubm9uZSkKZWxzZQogIGNhbGwgczpITCgnQ3Vyc29yTGluZU5yJywgczpwYWxldHRlLmZnLCBzOnBhbGV0dGUuYmcxKQplbmRpZgpjYWxsIHM6SEwoJ0RpZmZBZGQnLCBzOnBhbGV0dGUubm9uZSwgczpwYWxldHRlLmRpZmZfZ3JlZW4pCmNhbGwgczpITCgnRGlmZkNoYW5nZScsIHM6cGFsZXR0ZS5ub25lLCBzOnBhbGV0dGUuZGlmZl9ibHVlKQpjYWxsIHM6SEwoJ0RpZmZEZWxldGUnLCBzOnBhbGV0dGUubm9uZSwgczpwYWxldHRlLmRpZmZfcmVkKQpjYWxsIHM6SEwoJ0RpZmZUZXh0JywgczpwYWxldHRlLm5vbmUsIHM6cGFsZXR0ZS5ub25lLCAncmV2ZXJzZScpCmNhbGwgczpITCgnRGlyZWN0b3J5JywgczpwYWxldHRlLmdyZWVuLCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdFcnJvck1zZycsIHM6cGFsZXR0ZS5yZWQsIHM6cGFsZXR0ZS5ub25lLCAnYm9sZCx1bmRlcmxpbmUnKQpjYWxsIHM6SEwoJ1dhcm5pbmdNc2cnLCBzOnBhbGV0dGUueWVsbG93LCBzOnBhbGV0dGUubm9uZSwgJ2JvbGQnKQpjYWxsIHM6SEwoJ01vZGVNc2cnLCBzOnBhbGV0dGUuZmcsIHM6cGFsZXR0ZS5ub25lLCAnYm9sZCcpCmNhbGwgczpITCgnTW9yZU1zZycsIHM6cGFsZXR0ZS5ibHVlLCBzOnBhbGV0dGUubm9uZSwgJ2JvbGQnKQpjYWxsIHM6SEwoJ0luY1NlYXJjaCcsIHM6cGFsZXR0ZS5iZzAsIHM6cGFsZXR0ZS5iZ19yZWQpCmNhbGwgczpITCgnU2VhcmNoJywgczpwYWxldHRlLmJnMCwgczpwYWxldHRlLmJnX2dyZWVuKQpjYWxsIHM6SEwoJ01hdGNoUGFyZW4nLCBzOnBhbGV0dGUubm9uZSwgczpwYWxldHRlLmJnNCkKY2FsbCBzOkhMKCdOb25UZXh0JywgczpwYWxldHRlLmJnNCwgczpwYWxldHRlLm5vbmUpCmNhbGwgczpITCgnV2hpdGVzcGFjZScsIHM6cGFsZXR0ZS5iZzQsIHM6cGFsZXR0ZS5ub25lKQpjYWxsIHM6SEwoJ1NwZWNpYWxLZXknLCBzOnBhbGV0dGUuYmc0LCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdQbWVudScsIHM6cGFsZXR0ZS5mZywgczpwYWxldHRlLmJnMikKY2FsbCBzOkhMKCdQbWVudVNiYXInLCBzOnBhbGV0dGUubm9uZSwgczpwYWxldHRlLmJnMikKaWYgczpjb25maWd1cmF0aW9uLm1lbnVfc2VsZWN0aW9uX2JhY2tncm91bmQgPT0jICdibHVlJwogIGNhbGwgczpITCgnUG1lbnVTZWwnLCBzOnBhbGV0dGUuYmcwLCBzOnBhbGV0dGUuYmdfYmx1ZSkKICBjYWxsIHM6SEwoJ1dpbGRNZW51JywgczpwYWxldHRlLmJnMCwgczpwYWxldHRlLmJnX2JsdWUpCmVsc2VpZiBzOmNvbmZpZ3VyYXRpb24ubWVudV9zZWxlY3Rpb25fYmFja2dyb3VuZCA9PSMgJ2dyZWVuJwogIGNhbGwgczpITCgnUG1lbnVTZWwnLCBzOnBhbGV0dGUuYmcwLCBzOnBhbGV0dGUuYmdfZ3JlZW4pCiAgY2FsbCBzOkhMKCdXaWxkTWVudScsIHM6cGFsZXR0ZS5iZzAsIHM6cGFsZXR0ZS5iZ19ncmVlbikKZWxzZWlmIHM6Y29uZmlndXJhdGlvbi5tZW51X3NlbGVjdGlvbl9iYWNrZ3JvdW5kID09IyAncmVkJwogIGNhbGwgczpITCgnUG1lbnVTZWwnLCBzOnBhbGV0dGUuYmcwLCBzOnBhbGV0dGUuYmdfcmVkKQogIGNhbGwgczpITCgnV2lsZE1lbnUnLCBzOnBhbGV0dGUuYmcwLCBzOnBhbGV0dGUuYmdfcmVkKQplbmRpZgpjYWxsIHM6SEwoJ1BtZW51VGh1bWInLCBzOnBhbGV0dGUubm9uZSwgczpwYWxldHRlLmdyZXkpCmNhbGwgczpITCgnUXVlc3Rpb24nLCBzOnBhbGV0dGUueWVsbG93LCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdTcGVsbEJhZCcsIHM6cGFsZXR0ZS5yZWQsIHM6cGFsZXR0ZS5ub25lLCAndW5kZXJjdXJsJywgczpwYWxldHRlLnJlZCkKY2FsbCBzOkhMKCdTcGVsbENhcCcsIHM6cGFsZXR0ZS55ZWxsb3csIHM6cGFsZXR0ZS5ub25lLCAndW5kZXJjdXJsJywgczpwYWxldHRlLnllbGxvdykKY2FsbCBzOkhMKCdTcGVsbExvY2FsJywgczpwYWxldHRlLmJsdWUsIHM6cGFsZXR0ZS5ub25lLCAndW5kZXJjdXJsJywgczpwYWxldHRlLmJsdWUpCmNhbGwgczpITCgnU3BlbGxSYXJlJywgczpwYWxldHRlLnB1cnBsZSwgczpwYWxldHRlLm5vbmUsICd1bmRlcmN1cmwnLCBzOnBhbGV0dGUucHVycGxlKQpjYWxsIHM6SEwoJ1N0YXR1c0xpbmUnLCBzOnBhbGV0dGUuZmcsIHM6cGFsZXR0ZS5iZzMpCmNhbGwgczpITCgnU3RhdHVzTGluZVRlcm0nLCBzOnBhbGV0dGUuZmcsIHM6cGFsZXR0ZS5iZzMpCmNhbGwgczpITCgnU3RhdHVzTGluZU5DJywgczpwYWxldHRlLmdyZXksIHM6cGFsZXR0ZS5iZzEpCmNhbGwgczpITCgnU3RhdHVzTGluZVRlcm1OQycsIHM6cGFsZXR0ZS5ncmV5LCBzOnBhbGV0dGUuYmcxKQpjYWxsIHM6SEwoJ1RhYkxpbmUnLCBzOnBhbGV0dGUuZmcsIHM6cGFsZXR0ZS5iZzQpCmNhbGwgczpITCgnVGFiTGluZUZpbGwnLCBzOnBhbGV0dGUuZ3JleSwgczpwYWxldHRlLmJnMSkKY2FsbCBzOkhMKCdUYWJMaW5lU2VsJywgczpwYWxldHRlLmJnMCwgczpwYWxldHRlLmJnX3JlZCkKY2FsbCBzOkhMKCdWZXJ0U3BsaXQnLCBzOnBhbGV0dGUuYmxhY2ssIHM6cGFsZXR0ZS5ub25lKQpjYWxsIHM6SEwoJ1Zpc3VhbCcsIHM6cGFsZXR0ZS5ub25lLCBzOnBhbGV0dGUuYmczKQpjYWxsIHM6SEwoJ1Zpc3VhbE5PUycsIHM6cGFsZXR0ZS5ub25lLCBzOnBhbGV0dGUuYmczLCAndW5kZXJsaW5lJykKY2FsbCBzOkhMKCdRdWlja0ZpeExpbmUnLCBzOnBhbGV0dGUuYmx1ZSwgczpwYWxldHRlLm5vbmUsICdib2xkJykKY2FsbCBzOkhMKCdEZWJ1ZycsIHM6cGFsZXR0ZS55ZWxsb3csIHM6cGFsZXR0ZS5ub25lKQpjYWxsIHM6SEwoJ2RlYnVnUEMnLCBzOnBhbGV0dGUuYmcwLCBzOnBhbGV0dGUuZ3JlZW4pCmNhbGwgczpITCgnZGVidWdCcmVha3BvaW50JywgczpwYWxldHRlLmJnMCwgczpwYWxldHRlLnJlZCkKY2FsbCBzOkhMKCdUb29sYmFyQnV0dG9uJywgczpwYWxldHRlLmJnMCwgczpwYWxldHRlLmJnX2JsdWUpCmlmIGhhcygnbnZpbScpCiAgaGlnaGxpZ2h0ISBsaW5rIGhlYWx0aEVycm9yIFJlZAogIGhpZ2hsaWdodCEgbGluayBoZWFsdGhTdWNjZXNzIEdyZWVuCiAgaGlnaGxpZ2h0ISBsaW5rIGhlYWx0aFdhcm5pbmcgWWVsbG93CiAgaGlnaGxpZ2h0ISBsaW5rIExzcERpYWdub3N0aWNzRXJyb3IgR3JleQogIGhpZ2hsaWdodCEgbGluayBMc3BEaWFnbm9zdGljc1dhcm5pbmcgR3JleQogIGhpZ2hsaWdodCEgbGluayBMc3BEaWFnbm9zdGljc0luZm9ybWF0aW9uIEdyZXkKICBoaWdobGlnaHQhIGxpbmsgTHNwRGlhZ25vc3RpY3NIaW50IEdyZXkKICBoaWdobGlnaHQhIGxpbmsgTHNwUmVmZXJlbmNlVGV4dCBDb2NIaWdobGlnaHRUZXh0CiAgaGlnaGxpZ2h0ISBsaW5rIExzcFJlZmVyZW5jZVJlYWQgQ29jSGlnaGxpZ2h0VGV4dAogIGhpZ2hsaWdodCEgbGluayBMc3BSZWZlcmVuY2VXcml0ZSBDb2NIaWdobGlnaHRUZXh0CmVuZGlmCiIgCiIgfX19CiIgU3ludGF4OiB7e3sKaWYgczpjb25maWd1cmF0aW9uLmVuYWJsZV9pdGFsaWMKICBjYWxsIHM6SEwoJ1R5cGUnLCBzOnBhbGV0dGUuYmx1ZSwgczpwYWxldHRlLm5vbmUsICdpdGFsaWMnKQogIGNhbGwgczpITCgnU3RydWN0dXJlJywgczpwYWxldHRlLmJsdWUsIHM6cGFsZXR0ZS5ub25lLCAnaXRhbGljJykKICBjYWxsIHM6SEwoJ1N0b3JhZ2VDbGFzcycsIHM6cGFsZXR0ZS5ibHVlLCBzOnBhbGV0dGUubm9uZSwgJ2l0YWxpYycpCiAgY2FsbCBzOkhMKCdJZGVudGlmaWVyJywgczpwYWxldHRlLm9yYW5nZSwgczpwYWxldHRlLm5vbmUsICdpdGFsaWMnKQogIGNhbGwgczpITCgnQ29uc3RhbnQnLCBzOnBhbGV0dGUub3JhbmdlLCBzOnBhbGV0dGUubm9uZSwgJ2l0YWxpYycpCmVsc2UKICBjYWxsIHM6SEwoJ1R5cGUnLCBzOnBhbGV0dGUuYmx1ZSwgczpwYWxldHRlLm5vbmUpCiAgY2FsbCBzOkhMKCdTdHJ1Y3R1cmUnLCBzOnBhbGV0dGUuYmx1ZSwgczpwYWxldHRlLm5vbmUpCiAgY2FsbCBzOkhMKCdTdG9yYWdlQ2xhc3MnLCBzOnBhbGV0dGUuYmx1ZSwgczpwYWxldHRlLm5vbmUpCiAgY2FsbCBzOkhMKCdJZGVudGlmaWVyJywgczpwYWxldHRlLm9yYW5nZSwgczpwYWxldHRlLm5vbmUpCiAgY2FsbCBzOkhMKCdDb25zdGFudCcsIHM6cGFsZXR0ZS5vcmFuZ2UsIHM6cGFsZXR0ZS5ub25lKQplbmRpZgpjYWxsIHM6SEwoJ1ByZVByb2MnLCBzOnBhbGV0dGUucmVkLCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdQcmVDb25kaXQnLCBzOnBhbGV0dGUucmVkLCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdJbmNsdWRlJywgczpwYWxldHRlLnJlZCwgczpwYWxldHRlLm5vbmUpCmNhbGwgczpITCgnS2V5d29yZCcsIHM6cGFsZXR0ZS5yZWQsIHM6cGFsZXR0ZS5ub25lKQpjYWxsIHM6SEwoJ0RlZmluZScsIHM6cGFsZXR0ZS5yZWQsIHM6cGFsZXR0ZS5ub25lKQpjYWxsIHM6SEwoJ1R5cGVkZWYnLCBzOnBhbGV0dGUucmVkLCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdFeGNlcHRpb24nLCBzOnBhbGV0dGUucmVkLCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdDb25kaXRpb25hbCcsIHM6cGFsZXR0ZS5yZWQsIHM6cGFsZXR0ZS5ub25lKQpjYWxsIHM6SEwoJ1JlcGVhdCcsIHM6cGFsZXR0ZS5yZWQsIHM6cGFsZXR0ZS5ub25lKQpjYWxsIHM6SEwoJ1N0YXRlbWVudCcsIHM6cGFsZXR0ZS5yZWQsIHM6cGFsZXR0ZS5ub25lKQpjYWxsIHM6SEwoJ01hY3JvJywgczpwYWxldHRlLnB1cnBsZSwgczpwYWxldHRlLm5vbmUpCmNhbGwgczpITCgnRXJyb3InLCBzOnBhbGV0dGUucmVkLCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdMYWJlbCcsIHM6cGFsZXR0ZS5wdXJwbGUsIHM6cGFsZXR0ZS5ub25lKQpjYWxsIHM6SEwoJ1NwZWNpYWwnLCBzOnBhbGV0dGUucHVycGxlLCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdTcGVjaWFsQ2hhcicsIHM6cGFsZXR0ZS5wdXJwbGUsIHM6cGFsZXR0ZS5ub25lKQpjYWxsIHM6SEwoJ0Jvb2xlYW4nLCBzOnBhbGV0dGUucHVycGxlLCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdTdHJpbmcnLCBzOnBhbGV0dGUueWVsbG93LCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdDaGFyYWN0ZXInLCBzOnBhbGV0dGUueWVsbG93LCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdOdW1iZXInLCBzOnBhbGV0dGUucHVycGxlLCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdGbG9hdCcsIHM6cGFsZXR0ZS5wdXJwbGUsIHM6cGFsZXR0ZS5ub25lKQpjYWxsIHM6SEwoJ0Z1bmN0aW9uJywgczpwYWxldHRlLmdyZWVuLCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdPcGVyYXRvcicsIHM6cGFsZXR0ZS5yZWQsIHM6cGFsZXR0ZS5ub25lKQpjYWxsIHM6SEwoJ1RpdGxlJywgczpwYWxldHRlLnJlZCwgczpwYWxldHRlLm5vbmUsICdib2xkJykKY2FsbCBzOkhMKCdUYWcnLCBzOnBhbGV0dGUub3JhbmdlLCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdEZWxpbWl0ZXInLCBzOnBhbGV0dGUuZmcsIHM6cGFsZXR0ZS5ub25lKQppZiBzOmNvbmZpZ3VyYXRpb24uZGlzYWJsZV9pdGFsaWNfY29tbWVudAogIGNhbGwgczpITCgnQ29tbWVudCcsIHM6cGFsZXR0ZS5ncmV5LCBzOnBhbGV0dGUubm9uZSkKICBjYWxsIHM6SEwoJ1NwZWNpYWxDb21tZW50JywgczpwYWxldHRlLmdyZXksIHM6cGFsZXR0ZS5ub25lKQogIGNhbGwgczpITCgnVG9kbycsIHM6cGFsZXR0ZS5ibHVlLCBzOnBhbGV0dGUubm9uZSkKZWxzZQogIGNhbGwgczpITCgnQ29tbWVudCcsIHM6cGFsZXR0ZS5ncmV5LCBzOnBhbGV0dGUubm9uZSwgJ2l0YWxpYycpCiAgY2FsbCBzOkhMKCdTcGVjaWFsQ29tbWVudCcsIHM6cGFsZXR0ZS5ncmV5LCBzOnBhbGV0dGUubm9uZSwgJ2l0YWxpYycpCiAgY2FsbCBzOkhMKCdUb2RvJywgczpwYWxldHRlLmJsdWUsIHM6cGFsZXR0ZS5ub25lLCAnaXRhbGljJykKZW5kaWYKY2FsbCBzOkhMKCdJZ25vcmUnLCBzOnBhbGV0dGUuZ3JleSwgczpwYWxldHRlLm5vbmUpCmNhbGwgczpITCgnVW5kZXJsaW5lZCcsIHM6cGFsZXR0ZS5ub25lLCBzOnBhbGV0dGUubm9uZSwgJ3VuZGVybGluZScpCiIgfX19CiIgUHJlZGVmaW5lZCBIaWdobGlnaHQgR3JvdXBzOiB7e3sKY2FsbCBzOkhMKCdGZycsIHM6cGFsZXR0ZS5mZywgczpwYWxldHRlLm5vbmUpCmNhbGwgczpITCgnR3JleScsIHM6cGFsZXR0ZS5ncmV5LCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdSZWQnLCBzOnBhbGV0dGUucmVkLCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdPcmFuZ2UnLCBzOnBhbGV0dGUub3JhbmdlLCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdZZWxsb3cnLCBzOnBhbGV0dGUueWVsbG93LCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdHcmVlbicsIHM6cGFsZXR0ZS5ncmVlbiwgczpwYWxldHRlLm5vbmUpCmNhbGwgczpITCgnQmx1ZScsIHM6cGFsZXR0ZS5ibHVlLCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdQdXJwbGUnLCBzOnBhbGV0dGUucHVycGxlLCBzOnBhbGV0dGUubm9uZSkKaWYgczpjb25maWd1cmF0aW9uLmVuYWJsZV9pdGFsaWMKICBjYWxsIHM6SEwoJ1JlZEl0YWxpYycsIHM6cGFsZXR0ZS5yZWQsIHM6cGFsZXR0ZS5ub25lLCAnaXRhbGljJykKICBjYWxsIHM6SEwoJ0JsdWVJdGFsaWMnLCBzOnBhbGV0dGUuYmx1ZSwgczpwYWxldHRlLm5vbmUsICdpdGFsaWMnKQogIGNhbGwgczpITCgnT3JhbmdlSXRhbGljJywgczpwYWxldHRlLm9yYW5nZSwgczpwYWxldHRlLm5vbmUsICdpdGFsaWMnKQplbHNlCiAgY2FsbCBzOkhMKCdSZWRJdGFsaWMnLCBzOnBhbGV0dGUucmVkLCBzOnBhbGV0dGUubm9uZSkKICBjYWxsIHM6SEwoJ0JsdWVJdGFsaWMnLCBzOnBhbGV0dGUuYmx1ZSwgczpwYWxldHRlLm5vbmUpCiAgY2FsbCBzOkhMKCdPcmFuZ2VJdGFsaWMnLCBzOnBhbGV0dGUub3JhbmdlLCBzOnBhbGV0dGUubm9uZSkKZW5kaWYKIiB9fX0KIiAKIiB9fX0KIiBFeHRlbmRlZCBGaWxlIFR5cGVzOiB7e3sKIiBNYXJrZG93bjoge3t7CiIgYnVpbHRpbjoge3t7CmNhbGwgczpITCgnbWFya2Rvd25IMScsIHM6cGFsZXR0ZS5yZWQsIHM6cGFsZXR0ZS5ub25lLCAnYm9sZCcpCmNhbGwgczpITCgnbWFya2Rvd25IMicsIHM6cGFsZXR0ZS5vcmFuZ2UsIHM6cGFsZXR0ZS5ub25lLCAnYm9sZCcpCmNhbGwgczpITCgnbWFya2Rvd25IMycsIHM6cGFsZXR0ZS55ZWxsb3csIHM6cGFsZXR0ZS5ub25lLCAnYm9sZCcpCmNhbGwgczpITCgnbWFya2Rvd25INCcsIHM6cGFsZXR0ZS5ncmVlbiwgczpwYWxldHRlLm5vbmUsICdib2xkJykKY2FsbCBzOkhMKCdtYXJrZG93bkg1JywgczpwYWxldHRlLmJsdWUsIHM6cGFsZXR0ZS5ub25lLCAnYm9sZCcpCmNhbGwgczpITCgnbWFya2Rvd25INicsIHM6cGFsZXR0ZS5wdXJwbGUsIHM6cGFsZXR0ZS5ub25lLCAnYm9sZCcpCmNhbGwgczpITCgnbWFya2Rvd25VcmwnLCBzOnBhbGV0dGUuYmx1ZSwgczpwYWxldHRlLm5vbmUsICd1bmRlcmxpbmUnKQpjYWxsIHM6SEwoJ21hcmtkb3duSXRhbGljJywgczpwYWxldHRlLm5vbmUsIHM6cGFsZXR0ZS5ub25lLCAnaXRhbGljJykKY2FsbCBzOkhMKCdtYXJrZG93bkJvbGQnLCBzOnBhbGV0dGUubm9uZSwgczpwYWxldHRlLm5vbmUsICdib2xkJykKY2FsbCBzOkhMKCdtYXJrZG93bkl0YWxpY0RlbGltaXRlcicsIHM6cGFsZXR0ZS5ncmV5LCBzOnBhbGV0dGUubm9uZSwgJ2l0YWxpYycpCmhpZ2hsaWdodCEgbGluayBtYXJrZG93bkNvZGUgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIG1hcmtkb3duQ29kZUJsb2NrIEdyZWVuCmhpZ2hsaWdodCEgbGluayBtYXJrZG93bkNvZGVEZWxpbWl0ZXIgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIG1hcmtkb3duQmxvY2txdW90ZSBHcmV5CmhpZ2hsaWdodCEgbGluayBtYXJrZG93bkxpc3RNYXJrZXIgUmVkCmhpZ2hsaWdodCEgbGluayBtYXJrZG93bk9yZGVyZWRMaXN0TWFya2VyIFJlZApoaWdobGlnaHQhIGxpbmsgbWFya2Rvd25SdWxlIFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgbWFya2Rvd25IZWFkaW5nUnVsZSBHcmV5CmhpZ2hsaWdodCEgbGluayBtYXJrZG93blVybERlbGltaXRlciBHcmV5CmhpZ2hsaWdodCEgbGluayBtYXJrZG93bkxpbmtEZWxpbWl0ZXIgR3JleQpoaWdobGlnaHQhIGxpbmsgbWFya2Rvd25MaW5rVGV4dERlbGltaXRlciBHcmV5CmhpZ2hsaWdodCEgbGluayBtYXJrZG93bkhlYWRpbmdEZWxpbWl0ZXIgR3JleQpoaWdobGlnaHQhIGxpbmsgbWFya2Rvd25MaW5rVGV4dCBSZWQKaGlnaGxpZ2h0ISBsaW5rIG1hcmtkb3duVXJsVGl0bGVEZWxpbWl0ZXIgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIG1hcmtkb3duSWREZWNsYXJhdGlvbiBtYXJrZG93bkxpbmtUZXh0CmhpZ2hsaWdodCEgbGluayBtYXJrZG93bkJvbGREZWxpbWl0ZXIgR3JleQpoaWdobGlnaHQhIGxpbmsgbWFya2Rvd25JZCBZZWxsb3cKIiB9fX0KIiB2aW0tbWFya2Rvd246IGh0dHBzOi8vZ2l0aHViLmNvbS9nYWJyaWVsZWxhbmEvdmltLW1hcmtkb3due3t7CmNhbGwgczpITCgnbWtkVVJMJywgczpwYWxldHRlLmJsdWUsIHM6cGFsZXR0ZS5ub25lLCAndW5kZXJsaW5lJykKY2FsbCBzOkhMKCdta2RJbmxpbmVVUkwnLCBzOnBhbGV0dGUuYmx1ZSwgczpwYWxldHRlLm5vbmUsICd1bmRlcmxpbmUnKQpjYWxsIHM6SEwoJ21rZEl0YWxpYycsIHM6cGFsZXR0ZS5ncmV5LCBzOnBhbGV0dGUubm9uZSwgJ2l0YWxpYycpCmhpZ2hsaWdodCEgbGluayBta2RDb2RlRGVsaW1pdGVyIEdyZWVuCmhpZ2hsaWdodCEgbGluayBta2RCb2xkIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIG1rZExpbmsgUmVkCmhpZ2hsaWdodCEgbGluayBta2RIZWFkaW5nIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIG1rZExpc3RJdGVtIFJlZApoaWdobGlnaHQhIGxpbmsgbWtkUnVsZSBQdXJwbGUKaGlnaGxpZ2h0ISBsaW5rIG1rZERlbGltaXRlciBHcmV5CmhpZ2hsaWdodCEgbGluayBta2RJZCBZZWxsb3cKIiB9fX0KIiB9fX0KIiBSZVN0cnVjdHVyZWRUZXh0OiB7e3sKIiBidWlsdGluOiBodHRwczovL2dpdGh1Yi5jb20vbWFyc2hhbGx3YXJkL3ZpbS1yZXN0cnVjdHVyZWR0ZXh0e3t7CmNhbGwgczpITCgncnN0U3RhbmRhbG9uZUh5cGVybGluaycsIHM6cGFsZXR0ZS5wdXJwbGUsIHM6cGFsZXR0ZS5ub25lLCAndW5kZXJsaW5lJykKY2FsbCBzOkhMKCdyc3RFbXBoYXNpcycsIHM6cGFsZXR0ZS5ub25lLCBzOnBhbGV0dGUubm9uZSwgJ2l0YWxpYycpCmNhbGwgczpITCgncnN0U3Ryb25nRW1waGFzaXMnLCBzOnBhbGV0dGUubm9uZSwgczpwYWxldHRlLm5vbmUsICdib2xkJykKY2FsbCBzOkhMKCdyc3RTdGFuZGFsb25lSHlwZXJsaW5rJywgczpwYWxldHRlLmJsdWUsIHM6cGFsZXR0ZS5ub25lLCAndW5kZXJsaW5lJykKY2FsbCBzOkhMKCdyc3RIeXBlcmxpbmtUYXJnZXQnLCBzOnBhbGV0dGUuYmx1ZSwgczpwYWxldHRlLm5vbmUsICd1bmRlcmxpbmUnKQpoaWdobGlnaHQhIGxpbmsgcnN0U3Vic3RpdHV0aW9uUmVmZXJlbmNlIEJsdWUKaGlnaGxpZ2h0ISBsaW5rIHJzdEludGVycHJldGVkVGV4dE9ySHlwZXJsaW5rUmVmZXJlbmNlIEdyZWVuCmhpZ2hsaWdodCEgbGluayByc3RUYWJsZUxpbmVzIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIHJzdElubGluZUxpdGVyYWwgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHJzdExpdGVyYWxCbG9jayBHcmVlbgpoaWdobGlnaHQhIGxpbmsgcnN0UXVvdGVkTGl0ZXJhbEJsb2NrIEdyZWVuCiIgfX19CiIgfX19CiIgTGFUZXg6IHt7ewoiIGJ1aWx0aW46IGh0dHA6Ly93d3cuZHJjaGlwLm9yZy9hc3Ryb25hdXQvdmltL2luZGV4Lmh0bWwjU1lOVEFYX1RFWHt7ewpoaWdobGlnaHQhIGxpbmsgdGV4U3RhdGVtZW50IEJsdWVJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIHRleE9ubHlNYXRoIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIHRleERlZk5hbWUgWWVsbG93CmhpZ2hsaWdodCEgbGluayB0ZXhOZXdDbWQgT3JhbmdlCmhpZ2hsaWdodCEgbGluayB0ZXhDbWROYW1lIEJsdWUKaGlnaGxpZ2h0ISBsaW5rIHRleEJlZ2luRW5kIFJlZApoaWdobGlnaHQhIGxpbmsgdGV4QmVnaW5FbmROYW1lIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0ZXhEb2NUeXBlIFJlZEl0YWxpYwpoaWdobGlnaHQhIGxpbmsgdGV4RG9jVHlwZUFyZ3MgT3JhbmdlCmhpZ2hsaWdodCEgbGluayB0ZXhJbnB1dEZpbGUgR3JlZW4KIiB9fX0KIiB9fX0KIiBIdG1sOiB7e3sKIiBidWlsdGluOiBodHRwczovL25vdGFidWcub3JnL2pvcmdlc3VtbGUvdmltLWh0bWwtc3ludGF4e3t7CmNhbGwgczpITCgnaHRtbEgxJywgczpwYWxldHRlLnJlZCwgczpwYWxldHRlLm5vbmUsICdib2xkJykKY2FsbCBzOkhMKCdodG1sSDInLCBzOnBhbGV0dGUub3JhbmdlLCBzOnBhbGV0dGUubm9uZSwgJ2JvbGQnKQpjYWxsIHM6SEwoJ2h0bWxIMycsIHM6cGFsZXR0ZS55ZWxsb3csIHM6cGFsZXR0ZS5ub25lLCAnYm9sZCcpCmNhbGwgczpITCgnaHRtbEg0JywgczpwYWxldHRlLmdyZWVuLCBzOnBhbGV0dGUubm9uZSwgJ2JvbGQnKQpjYWxsIHM6SEwoJ2h0bWxINScsIHM6cGFsZXR0ZS5ibHVlLCBzOnBhbGV0dGUubm9uZSwgJ2JvbGQnKQpjYWxsIHM6SEwoJ2h0bWxINicsIHM6cGFsZXR0ZS5wdXJwbGUsIHM6cGFsZXR0ZS5ub25lLCAnYm9sZCcpCmNhbGwgczpITCgnaHRtbExpbmsnLCBzOnBhbGV0dGUubm9uZSwgczpwYWxldHRlLm5vbmUsICd1bmRlcmxpbmUnKQpjYWxsIHM6SEwoJ2h0bWxCb2xkJywgczpwYWxldHRlLm5vbmUsIHM6cGFsZXR0ZS5ub25lLCAnYm9sZCcpCmNhbGwgczpITCgnaHRtbEJvbGRVbmRlcmxpbmUnLCBzOnBhbGV0dGUubm9uZSwgczpwYWxldHRlLm5vbmUsICdib2xkLHVuZGVybGluZScpCmNhbGwgczpITCgnaHRtbEJvbGRJdGFsaWMnLCBzOnBhbGV0dGUubm9uZSwgczpwYWxldHRlLm5vbmUsICdib2xkLGl0YWxpYycpCmNhbGwgczpITCgnaHRtbEJvbGRVbmRlcmxpbmVJdGFsaWMnLCBzOnBhbGV0dGUubm9uZSwgczpwYWxldHRlLm5vbmUsICdib2xkLHVuZGVybGluZSxpdGFsaWMnKQpjYWxsIHM6SEwoJ2h0bWxVbmRlcmxpbmUnLCBzOnBhbGV0dGUubm9uZSwgczpwYWxldHRlLm5vbmUsICd1bmRlcmxpbmUnKQpjYWxsIHM6SEwoJ2h0bWxVbmRlcmxpbmVJdGFsaWMnLCBzOnBhbGV0dGUubm9uZSwgczpwYWxldHRlLm5vbmUsICd1bmRlcmxpbmUsaXRhbGljJykKY2FsbCBzOkhMKCdodG1sSXRhbGljJywgczpwYWxldHRlLm5vbmUsIHM6cGFsZXR0ZS5ub25lLCAnaXRhbGljJykKaGlnaGxpZ2h0ISBsaW5rIGh0bWxUYWcgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGh0bWxFbmRUYWcgQmx1ZQpoaWdobGlnaHQhIGxpbmsgaHRtbFRhZ04gUmVkSXRhbGljCmhpZ2hsaWdodCEgbGluayBodG1sVGFnTmFtZSBSZWRJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIGh0bWxBcmcgQmx1ZQpoaWdobGlnaHQhIGxpbmsgaHRtbFNjcmlwdFRhZyBQdXJwbGUKaGlnaGxpZ2h0ISBsaW5rIGh0bWxTcGVjaWFsVGFnTmFtZSBSZWRJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIGh0bWxTdHJpbmcgR3JlZW4KIiB9fX0KIiB9fX0KIiBYbWw6IHt7ewoiIGJ1aWx0aW46IGh0dHBzOi8vZ2l0aHViLmNvbS9jaHJpc2JyYS92aW0teG1sLWZ0cGx1Z2lue3t7CmhpZ2hsaWdodCEgbGluayB4bWxUYWcgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHhtbEVuZFRhZyBCbHVlCmhpZ2hsaWdodCEgbGluayB4bWxUYWdOYW1lIFJlZEl0YWxpYwpoaWdobGlnaHQhIGxpbmsgeG1sRXF1YWwgT3JhbmdlCmhpZ2hsaWdodCEgbGluayB4bWxBdHRyaWIgQmx1ZQpoaWdobGlnaHQhIGxpbmsgeG1sRW50aXR5IFJlZApoaWdobGlnaHQhIGxpbmsgeG1sRW50aXR5UHVuY3QgUmVkCmhpZ2hsaWdodCEgbGluayB4bWxEb2NUeXBlRGVjbCBHcmV5CmhpZ2hsaWdodCEgbGluayB4bWxEb2NUeXBlS2V5d29yZCBSZWRJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIHhtbENkYXRhU3RhcnQgR3JleQpoaWdobGlnaHQhIGxpbmsgeG1sQ2RhdGFDZGF0YSBQdXJwbGUKaGlnaGxpZ2h0ISBsaW5rIHhtbFN0cmluZyBHcmVlbgoiIH19fQoiIH19fQoiIENTUzoge3t7CiIgYnVpbHRpbjogaHR0cHM6Ly9naXRodWIuY29tL0p1bGVzV2FuZy9jc3Mudmlte3t7CmhpZ2hsaWdodCEgbGluayBjc3NTdHJpbmdRIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjc3NTdHJpbmdRUSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY3NzQXR0ckNvbW1hIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIGNzc0JyYWNlcyBHcmV5CmhpZ2hsaWdodCEgbGluayBjc3NUYWdOYW1lIFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgY3NzQ2xhc3NOYW1lRG90IE9yYW5nZQpoaWdobGlnaHQhIGxpbmsgY3NzQ2xhc3NOYW1lIFJlZApoaWdobGlnaHQhIGxpbmsgY3NzRnVuY3Rpb25OYW1lIE9yYW5nZQpoaWdobGlnaHQhIGxpbmsgY3NzQXR0ciBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY3NzQ29tbW9uQXR0ciBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY3NzUHJvcCBCbHVlCmhpZ2hsaWdodCEgbGluayBjc3NQc2V1ZG9DbGFzc0lkIFllbGxvdwpoaWdobGlnaHQhIGxpbmsgY3NzUHNldWRvQ2xhc3NGbiBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY3NzUHNldWRvQ2xhc3MgWWVsbG93CmhpZ2hsaWdodCEgbGluayBjc3NJbXBvcnRhbnQgUmVkCmhpZ2hsaWdodCEgbGluayBjc3NTZWxlY3Rvck9wIE9yYW5nZQpoaWdobGlnaHQhIGxpbmsgY3NzU2VsZWN0b3JPcDIgT3JhbmdlCmhpZ2hsaWdodCEgbGluayBjc3NDb2xvciBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY3NzVW5pdERlY29yYXRvcnMgT3JhbmdlCmhpZ2hsaWdodCEgbGluayBjc3NWYWx1ZUxlbmd0aCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY3NzVmFsdWVJbnRlZ2VyIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjc3NWYWx1ZU51bWJlciBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY3NzVmFsdWVBbmdsZSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY3NzVmFsdWVUaW1lIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjc3NWYWx1ZUZyZXF1ZW5jeSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY3NzVmVuZG9yIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIGNzc05vaXNlIEdyZXkKIiB9fX0KIiB9fX0KIiBTQVNTOiB7e3sKIiBzY3NzLXN5bnRheDogaHR0cHM6Ly9naXRodWIuY29tL2Nha2ViYWtlci9zY3NzLXN5bnRheC52aW17e3sKaGlnaGxpZ2h0ISBsaW5rIHNjc3NNaXhpbk5hbWUgT3JhbmdlCmhpZ2hsaWdodCEgbGluayBzY3NzU2VsZWN0b3JDaGFyIE9yYW5nZQpoaWdobGlnaHQhIGxpbmsgc2Nzc1NlbGVjdG9yTmFtZSBSZWQKaGlnaGxpZ2h0ISBsaW5rIHNjc3NJbnRlcnBvbGF0aW9uRGVsaW1pdGVyIFllbGxvdwpoaWdobGlnaHQhIGxpbmsgc2Nzc1ZhcmlhYmxlVmFsdWUgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHNjc3NOdWxsIFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgc2Nzc0Jvb2xlYW4gUHVycGxlCmhpZ2hsaWdodCEgbGluayBzY3NzVmFyaWFibGVBc3NpZ25tZW50IEdyZXkKaGlnaGxpZ2h0ISBsaW5rIHNjc3NBdHRyaWJ1dGUgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHNjc3NGdW5jdGlvbk5hbWUgT3JhbmdlCmhpZ2hsaWdodCEgbGluayBzY3NzVmFyaWFibGUgRmcKaGlnaGxpZ2h0ISBsaW5rIHNjc3NBbXBlcnNhbmQgUHVycGxlCiIgfX19CiIgfX19CiIgTEVTUzoge3t7CiIgdmltLWxlc3M6IGh0dHBzOi8vZ2l0aHViLmNvbS9ncm9lbmV3ZWdlL3ZpbS1sZXNze3t7CmhpZ2hsaWdodCEgbGluayBsZXNzTWl4aW5DaGFyIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIGxlc3NDbGFzcyBSZWQKaGlnaGxpZ2h0ISBsaW5rIGxlc3NGdW5jdGlvbiBPcmFuZ2UKIiB9fX0KIiB9fX0KIiBKYXZhU2NyaXB0OiB7e3sKIiBidWlsdGluOiBodHRwOi8vd3d3LmZsZWluZXIuY29tL3ZpbS9zeW50YXgvamF2YXNjcmlwdC52aW17e3sKaGlnaGxpZ2h0ISBsaW5rIGphdmFTY3JpcHROdWxsIE9yYW5nZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgamF2YVNjcmlwdElkZW50aWZpZXIgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgamF2YVNjcmlwdFBhcmVucyBGZwpoaWdobGlnaHQhIGxpbmsgamF2YVNjcmlwdEJyYWNlcyBGZwpoaWdobGlnaHQhIGxpbmsgamF2YVNjcmlwdE51bWJlciBQdXJwbGUKaGlnaGxpZ2h0ISBsaW5rIGphdmFTY3JpcHRMYWJlbCBSZWQKaGlnaGxpZ2h0ISBsaW5rIGphdmFTY3JpcHRHbG9iYWwgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgamF2YVNjcmlwdE1lc3NhZ2UgQmx1ZUl0YWxpYwoiIH19fQoiIHZpbS1qYXZhc2NyaXB0OiBodHRwczovL2dpdGh1Yi5jb20vcGFuZ2xvc3MvdmltLWphdmFzY3JpcHR7e3sKaGlnaGxpZ2h0ISBsaW5rIGpzTm9pc2UgRmcKaGlnaGxpZ2h0ISBsaW5rIE5vaXNlIEZnCmhpZ2hsaWdodCEgbGluayBqc1BhcmVucyBGZwpoaWdobGlnaHQhIGxpbmsganNCcmFja2V0cyBGZwpoaWdobGlnaHQhIGxpbmsganNPYmplY3RCcmFjZXMgRmcKaGlnaGxpZ2h0ISBsaW5rIGpzVGhpcyBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayBqc1VuZGVmaW5lZCBPcmFuZ2VJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIGpzTnVsbCBPcmFuZ2VJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIGpzTmFuIE9yYW5nZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsganNTdXBlciBPcmFuZ2VJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIGpzUHJvdG90eXBlIE9yYW5nZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsganNGdW5jdGlvbiBSZWQKaGlnaGxpZ2h0ISBsaW5rIGpzR2xvYmFsTm9kZU9iamVjdHMgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsganNHbG9iYWxPYmplY3RzIEJsdWVJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIGpzQXJyb3dGdW5jdGlvbiBSZWQKaGlnaGxpZ2h0ISBsaW5rIGpzQXJyb3dGdW5jQXJncyBGZwpoaWdobGlnaHQhIGxpbmsganNGdW5jQXJncyBGZwpoaWdobGlnaHQhIGxpbmsganNPYmplY3RQcm9wIEZnCmhpZ2hsaWdodCEgbGluayBqc1ZhcmlhYmxlRGVmIEZnCmhpZ2hsaWdodCEgbGluayBqc09iamVjdEtleSBGZwpoaWdobGlnaHQhIGxpbmsganNQYXJlbiBGZwpoaWdobGlnaHQhIGxpbmsganNQYXJlbklmRWxzZSBGZwpoaWdobGlnaHQhIGxpbmsganNQYXJlblJlcGVhdCBGZwpoaWdobGlnaHQhIGxpbmsganNQYXJlblN3aXRjaCBGZwpoaWdobGlnaHQhIGxpbmsganNQYXJlbkNhdGNoIEZnCmhpZ2hsaWdodCEgbGluayBqc0JyYWNrZXQgRmcKaGlnaGxpZ2h0ISBsaW5rIGpzT2JqZWN0VmFsdWUgRmcKaGlnaGxpZ2h0ISBsaW5rIGpzRGVzdHJ1Y3R1cmluZ0Jsb2NrIEZnCmhpZ2hsaWdodCEgbGluayBqc0Jsb2NrTGFiZWwgUHVycGxlCmhpZ2hsaWdodCEgbGluayBqc0Z1bmN0aW9uS2V5IEdyZWVuCmhpZ2hsaWdodCEgbGluayBqc0NsYXNzRGVmaW5pdGlvbiBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayBqc0RvdCBPcmFuZ2UKaGlnaGxpZ2h0ISBsaW5rIGpzU3ByZWFkRXhwcmVzc2lvbiBQdXJwbGUKaGlnaGxpZ2h0ISBsaW5rIGpzU3ByZWFkT3BlcmF0b3IgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGpzTW9kdWxlS2V5d29yZCBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayBqc1RlbXBsYXRlRXhwcmVzc2lvbiBQdXJwbGUKaGlnaGxpZ2h0ISBsaW5rIGpzVGVtcGxhdGVCcmFjZXMgUHVycGxlCmhpZ2hsaWdodCEgbGluayBqc0NsYXNzTWV0aG9kVHlwZSBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayBqc0V4Y2VwdGlvbnMgQmx1ZUl0YWxpYwoiIH19fQoiIHlhanM6IGh0dHBzOi8vZ2l0aHViLmNvbS9vdGhyZWUveWFqcy52aW17e3sKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRPcFN5bWJvbCBSZWQKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRPcFN5bWJvbHMgUmVkCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0SWRlbnRpZmllck5hbWUgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRWYXJpYWJsZSBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0T2JqZWN0TGFiZWwgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRQcm9wZXJ0eU5hbWVTdHJpbmcgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRGdW5jQXJnIEZnCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0T2JqZWN0TGl0ZXJhbCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdElkZW50aWZpZXIgT3JhbmdlSXRhbGljCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0QXJyb3dGdW5jIFJlZApoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdFRlbXBsYXRlIFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdFRlbXBsYXRlU3Vic3RpdHV0aW9uIFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdFRlbXBsYXRlU0IgUHVycGxlCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0Tm9kZUdsb2JhbCBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0RG9jVGFncyBSZWRJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHREb2NOb3RhdGlvbiBCbHVlCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0Q2xhc3NTdXBlciBPcmFuZ2VJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRDbGFzc05hbWUgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdENsYXNzU3VwZXJOYW1lIEJsdWVJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRPcGVyYXRvciBSZWQKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRCcmFja2V0cyBGZwpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdEJyYWNlcyBGZwpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdExhYmVsIFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdEVuZENvbG9ucyBHcmV5CmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0T2JqZWN0TGFiZWxDb2xvbiBHcmV5CmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0RG90Tm90YXRpb24gT3JhbmdlCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0R2xvYmFsQXJyYXlEb3QgT3JhbmdlCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0R2xvYmFsQmlnSW50RG90IE9yYW5nZQpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdEdsb2JhbERhdGVEb3QgT3JhbmdlCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0R2xvYmFsSlNPTkRvdCBPcmFuZ2UKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRHbG9iYWxNYXRoRG90IE9yYW5nZQpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdEdsb2JhbE51bWJlckRvdCBPcmFuZ2UKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRHbG9iYWxPYmplY3REb3QgT3JhbmdlCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0R2xvYmFsUHJvbWlzZURvdCBPcmFuZ2UKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRHbG9iYWxSZWdFeHBEb3QgT3JhbmdlCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0R2xvYmFsU3RyaW5nRG90IE9yYW5nZQpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdEdsb2JhbFN5bWJvbERvdCBPcmFuZ2UKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRHbG9iYWxVUkxEb3QgT3JhbmdlCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0TWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0TWV0aG9kTmFtZSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdE9iamVjdE1ldGhvZE5hbWUgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRHbG9iYWxNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRET01TdG9yYWdlTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0RmlsZU1ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdEZpbGVSZWFkZXJNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRGaWxlTGlzdE1ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdEJsb2JNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRVUkxTdGF0aWNNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHROdW1iZXJTdGF0aWNNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHROdW1iZXJNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRET01Ob2RlTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0RVM2QmlnSW50U3RhdGljTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0Qk9NV2luZG93TWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0SGVhZGVyc01ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdFJlcXVlc3RNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRSZXNwb25zZU1ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdEVTNlNldE1ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdFJlZmxlY3RNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRQYXltZW50TWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0UGF5bWVudFJlc3BvbnNlTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0VHlwZWRBcnJheVN0YXRpY01ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdEdlb2xvY2F0aW9uTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0RVM2TWFwTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0U2VydmljZVdvcmtlck1ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdENhY2hlTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0RnVuY3Rpb25NZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRYSFJNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRCT01OYXZpZ2F0b3JNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRTZXJ2aWNlV29ya2VyTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0RE9NRXZlbnRUYXJnZXRNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRET01FdmVudE1ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdEludGxNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRET01Eb2NNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRTdHJpbmdTdGF0aWNNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRTdHJpbmdNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRTeW1ib2xTdGF0aWNNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRSZWdFeHBNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRPYmplY3RTdGF0aWNNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRPYmplY3RNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRCT01Mb2NhdGlvbk1ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdEpTT05TdGF0aWNNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRHZW5lcmF0b3JNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRFbmNvZGluZ01ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdFByb21pc2VTdGF0aWNNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRQcm9taXNlTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0Qk9NSGlzdG9yeU1ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdERPTUZvcm1NZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRDbGlwYm9hcmRNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRUeXBlZEFycmF5U3RhdGljTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0QnJvYWRjYXN0TWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0RGF0ZVN0YXRpY01ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdERhdGVNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRDb25zb2xlTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0QXJyYXlTdGF0aWNNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRBcnJheU1ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdE1hdGhTdGF0aWNNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRTdWJ0bGVDcnlwdG9NZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRDcnlwdG9NZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRQcm9wIEZnCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0Qk9NV2luZG93UHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdERPTVN0b3JhZ2VQcm9wIEZnCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0RmlsZVJlYWRlclByb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRVUkxVdGlsc1Byb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHROdW1iZXJTdGF0aWNQcm9wIEZnCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0RE9NTm9kZVByb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRSZXF1ZXN0UHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdFJlc3BvbnNlUHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdEVTNlNldFByb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRQYXltZW50UHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdFBheW1lbnRSZXNwb25zZVByb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRQYXltZW50QWRkcmVzc1Byb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRQYXltZW50U2hpcHBpbmdPcHRpb25Qcm9wIEZnCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0VHlwZWRBcnJheVN0YXRpY1Byb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRTZXJ2aWNlV29ya2VyUHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdEVTNk1hcFByb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRSZWdFeHBTdGF0aWNQcm9wIEZnCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0UmVnRXhwUHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdFhIUlByb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRCT01OYXZpZ2F0b3JQcm9wIEdyZWVuCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0RE9NRXZlbnRQcm9wIEZnCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0Qk9NTmV0d29ya1Byb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRET01Eb2NQcm9wIEZnCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0U3ltYm9sU3RhdGljUHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdFN5bWJvbFByb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRCT01Mb2NhdGlvblByb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRFbmNvZGluZ1Byb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRDcnlwdG9Qcm9wIEZnCmhpZ2hsaWdodCEgbGluayBqYXZhc2NyaXB0Qk9NSGlzdG9yeVByb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRET01Gb3JtUHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdERhdGFWaWV3UHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgamF2YXNjcmlwdEJyb2FkY2FzdFByb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFzY3JpcHRNYXRoU3RhdGljUHJvcCBGZwoiIH19fQoiIH19fQoiIEphdmFTY3JpcHQgUmVhY3Q6IHt7ewoiIHZpbS1qc3gtcHJldHR5OiBodHRwczovL2dpdGh1Yi5jb20vbWF4bWVsbG9uL3ZpbS1qc3gtcHJldHR5e3t7CmhpZ2hsaWdodCEgbGluayBqc3hUYWdOYW1lIFJlZEl0YWxpYwpoaWdobGlnaHQhIGxpbmsganN4T3BlblB1bmN0IEdyZWVuCmhpZ2hsaWdodCEgbGluayBqc3hDbG9zZVB1bmN0IEJsdWUKaGlnaGxpZ2h0ISBsaW5rIGpzeEVzY2FwZUpzIFB1cnBsZQpoaWdobGlnaHQhIGxpbmsganN4QXR0cmliIEJsdWUKIiB9fX0KIiB9fX0KIiBUeXBlU2NyaXB0OiB7e3sKIiB2aW0tdHlwZXNjcmlwdDogaHR0cHM6Ly9naXRodWIuY29tL2xlYWZnYXJsYW5kL3R5cGVzY3JpcHQtdmlte3t7CmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0U3RvcmFnZUNsYXNzIFJlZApoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdEVuZENvbG9ucyBGZwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdFNvdXJjZSBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0TWVzc2FnZSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdEdsb2JhbE9iamVjdHMgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdEludGVycG9sYXRpb24gUHVycGxlCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0SW50ZXJwb2xhdGlvbkRlbGltaXRlciBQdXJwbGUKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRCcmFjZXMgRmcKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRQYXJlbnMgRmcKIiB9fX0KIiB5YXRzOiBodHRwczpnaXRodWIuY29tL0hlcnJpbmd0b25EYXJraG9sbWUveWF0cy52aW17e3sKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRNZXRob2RBY2Nlc3NvciBSZWQKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRWYXJpYWJsZSBSZWQKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRWYXJpYWJsZURlY2xhcmF0aW9uIEZnCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0VHlwZVJlZmVyZW5jZSBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0QnJhY2VzIEZnCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0RW51bUtleXdvcmQgUmVkCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0RW51bSBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0SWRlbnRpZmllck5hbWUgRmcKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRQcm9wIEZnCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0Q2FsbCBGZwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdEludGVyZmFjZU5hbWUgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdEVuZENvbG9ucyBGZwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdE1lbWJlciBGZwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdE1lbWJlck9wdGlvbmFsaXR5IFJlZApoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdE9iamVjdExhYmVsIEZnCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0RGVmYXVsdFBhcmFtIEZnCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0QXJyb3dGdW5jIFJlZApoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdEFic3RyYWN0IFJlZApoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdE9iamVjdENvbG9uIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRUeXBlQW5ub3RhdGlvbiBHcmV5CmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0QXNzaWduIFJlZApoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdEJpbmFyeU9wIFJlZApoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdFVuYXJ5T3AgUmVkCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0RnVuY0NvbW1hIEZnCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0Q2xhc3NOYW1lIEJsdWVJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRDbGFzc0hlcml0YWdlIEJsdWVJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRJbnRlcmZhY2VIZXJpdGFnZSBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0SWRlbnRpZmllciBPcmFuZ2VJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRHbG9iYWwgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdE9wZXJhdG9yIFJlZApoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdE5vZGVHbG9iYWwgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdEV4cG9ydCBSZWQKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRJbXBvcnQgUmVkCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0VHlwZVBhcmFtZXRlciBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0UmVhZG9ubHlNb2RpZmllciBSZWQKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRBY2Nlc3NpYmlsaXR5TW9kaWZpZXIgUmVkCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0QW1iaWVudERlY2xhcmF0aW9uIFJlZApoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdFRlbXBsYXRlU3Vic3RpdHV0aW9uIFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdFRlbXBsYXRlU0IgUHVycGxlCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0RXhjZXB0aW9ucyBSZWQKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRDYXN0S2V5d29yZCBSZWQKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRPcHRpb25hbE1hcmsgUmVkCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0TnVsbCBPcmFuZ2VJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRNYXBwZWRJbiBSZWQKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRGdW5jVHlwZUFycm93IFJlZApoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdFRlcm5hcnlPcCBSZWQKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRQYXJlbkV4cCBGZwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdEluZGV4RXhwciBGZwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdERvdE5vdGF0aW9uIE9yYW5nZQpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdEdsb2JhbE51bWJlckRvdCBPcmFuZ2UKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRHbG9iYWxTdHJpbmdEb3QgT3JhbmdlCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0R2xvYmFsQXJyYXlEb3QgT3JhbmdlCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0R2xvYmFsT2JqZWN0RG90IE9yYW5nZQpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdEdsb2JhbFN5bWJvbERvdCBPcmFuZ2UKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRHbG9iYWxNYXRoRG90IE9yYW5nZQpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdEdsb2JhbERhdGVEb3QgT3JhbmdlCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0R2xvYmFsSlNPTkRvdCBPcmFuZ2UKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRHbG9iYWxSZWdFeHBEb3QgT3JhbmdlCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0R2xvYmFsUHJvbWlzZURvdCBPcmFuZ2UKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRHbG9iYWxVUkxEb3QgT3JhbmdlCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0R2xvYmFsTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0RE9NU3RvcmFnZU1ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdEZpbGVNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRGaWxlUmVhZGVyTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0RmlsZUxpc3RNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRCbG9iTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0VVJMU3RhdGljTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0TnVtYmVyU3RhdGljTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0TnVtYmVyTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0RE9NTm9kZU1ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdFBheW1lbnRNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRQYXltZW50UmVzcG9uc2VNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRIZWFkZXJzTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0UmVxdWVzdE1ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdFJlc3BvbnNlTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0RVM2U2V0TWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0UmVmbGVjdE1ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdEJPTVdpbmRvd01ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdEdlb2xvY2F0aW9uTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0U2VydmljZVdvcmtlck1ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdENhY2hlTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0RVM2TWFwTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0RnVuY3Rpb25NZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRSZWdFeHBNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRYSFJNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRCT01OYXZpZ2F0b3JNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRTZXJ2aWNlV29ya2VyTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0SW50bE1ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdERPTUV2ZW50VGFyZ2V0TWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0RE9NRXZlbnRNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRET01Eb2NNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRTdHJpbmdTdGF0aWNNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRTdHJpbmdNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRTeW1ib2xTdGF0aWNNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRPYmplY3RTdGF0aWNNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRPYmplY3RNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRKU09OU3RhdGljTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0RW5jb2RpbmdNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRCT01Mb2NhdGlvbk1ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdFByb21pc2VTdGF0aWNNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRQcm9taXNlTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0U3VidGxlQ3J5cHRvTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0Q3J5cHRvTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0Qk9NSGlzdG9yeU1ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdERPTUZvcm1NZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRDb25zb2xlTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0RGF0ZVN0YXRpY01ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdERhdGVNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRBcnJheVN0YXRpY01ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdEFycmF5TWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0TWF0aFN0YXRpY01ldGhvZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdFN0cmluZ1Byb3BlcnR5IEZnCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0RE9NU3RvcmFnZVByb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRGaWxlUmVhZGVyUHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdFVSTFV0aWxzUHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdE51bWJlclN0YXRpY1Byb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRET01Ob2RlUHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdEJPTVdpbmRvd1Byb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRSZXF1ZXN0UHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdFJlc3BvbnNlUHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdFBheW1lbnRQcm9wIEZnCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0UGF5bWVudFJlc3BvbnNlUHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdFBheW1lbnRBZGRyZXNzUHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdFBheW1lbnRTaGlwcGluZ09wdGlvblByb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRFUzZTZXRQcm9wIEZnCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0U2VydmljZVdvcmtlclByb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRFUzZNYXBQcm9wIEZnCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0UmVnRXhwU3RhdGljUHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdFJlZ0V4cFByb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRCT01OYXZpZ2F0b3JQcm9wIEdyZWVuCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0WEhSUHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdERPTUV2ZW50UHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdERPTURvY1Byb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRCT01OZXR3b3JrUHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdFN5bWJvbFN0YXRpY1Byb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRFbmNvZGluZ1Byb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRCT01Mb2NhdGlvblByb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRDcnlwdG9Qcm9wIEZnCmhpZ2hsaWdodCEgbGluayB0eXBlc2NyaXB0RE9NRm9ybVByb3AgRmcKaGlnaGxpZ2h0ISBsaW5rIHR5cGVzY3JpcHRCT01IaXN0b3J5UHJvcCBGZwpoaWdobGlnaHQhIGxpbmsgdHlwZXNjcmlwdE1hdGhTdGF0aWNQcm9wIEZnCiIgfX19CiIgfX19CiIgRGFydDoge3t7CiIgZGFydC1sYW5nOiBodHRwczovL2dpdGh1Yi5jb20vZGFydC1sYW5nL2RhcnQtdmltLXBsdWdpbnt7ewpoaWdobGlnaHQhIGxpbmsgZGFydENvcmVDbGFzc2VzIEJsdWVJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIGRhcnRUeXBlTmFtZSBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayBkYXJ0SW50ZXJwb2xhdGlvbiBQdXJwbGUKaGlnaGxpZ2h0ISBsaW5rIGRhcnRUeXBlRGVmIFJlZApoaWdobGlnaHQhIGxpbmsgZGFydENsYXNzRGVjbCBSZWQKaGlnaGxpZ2h0ISBsaW5rIGRhcnRMaWJyYXJ5IFJlZApoaWdobGlnaHQhIGxpbmsgZGFydE1ldGFkYXRhIE9yYW5nZUl0YWxpYwoiIH19fQoiIH19fQoiIEMvQysrOiB7e3sKIiB2aW0tY3BwLWVuaGFuY2VkLWhpZ2hsaWdodDogaHR0cHM6Ly9naXRodWIuY29tL29jdG9sL3ZpbS1jcHAtZW5oYW5jZWQtaGlnaGxpZ2h0e3t7CmhpZ2hsaWdodCEgbGluayBjTGFiZWwgUmVkCmhpZ2hsaWdodCEgbGluayBjcHBTVExuYW1lc3BhY2UgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgY3BwU1RMdHlwZSBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayBjcHBBY2Nlc3MgUmVkCmhpZ2hsaWdodCEgbGluayBjcHBTdHJ1Y3R1cmUgUmVkCmhpZ2hsaWdodCEgbGluayBjcHBTVExpb3MgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgY3BwU1RMaXRlcmF0b3IgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgY3BwU1RMZXhjZXB0aW9uIFJlZAoiIH19fQoiIHZpbS1jcHAtbW9kZXJuOiBodHRwczovL2dpdGh1Yi5jb20vYmZyZy92aW0tY3BwLW1vZGVybnt7ewpoaWdobGlnaHQhIGxpbmsgY3BwU1RMVmFyaWFibGUgQmx1ZUl0YWxpYwoiIH19fQoiIGNocm9tYXRpY2E6IGh0dHBzOi8vZ2l0aHViLmNvbS9hcmFrYXNoaWMvY2hyb21hdGljYS5udmlte3t7CmhpZ2hsaWdodCEgbGluayBNZW1iZXIgT3JhbmdlSXRhbGljCmhpZ2hsaWdodCEgbGluayBWYXJpYWJsZSBGZwpoaWdobGlnaHQhIGxpbmsgTmFtZXNwYWNlIEJsdWVJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIEVudW1Db25zdGFudCBPcmFuZ2VJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIGNocm9tYXRpY2FFeGNlcHRpb24gUmVkCmhpZ2hsaWdodCEgbGluayBjaHJvbWF0aWNhQ2FzdCBSZWQKaGlnaGxpZ2h0ISBsaW5rIE9wZXJhdG9yT3ZlcmxvYWQgUmVkCmhpZ2hsaWdodCEgbGluayBBY2Nlc3NRdWFsIFJlZApoaWdobGlnaHQhIGxpbmsgTGlua2FnZSBSZWQKaGlnaGxpZ2h0ISBsaW5rIEF1dG9UeXBlIEJsdWVJdGFsaWMKIiB9fX0KIiB2aW0tbHNwLWN4eC1oaWdobGlnaHQgaHR0cHM6Ly9naXRodWIuY29tL2phY2tndW8zODAvdmltLWxzcC1jeHgtaGlnaGxpZ2h0e3t7CmhpZ2hsaWdodCEgbGluayBMc3BDeHhIbFNraXBwZWRSZWdpb24gR3JleQpoaWdobGlnaHQhIGxpbmsgTHNwQ3h4SGxTa2lwcGVkUmVnaW9uQmVnaW5FbmQgUmVkCmhpZ2hsaWdodCEgbGluayBMc3BDeHhIbEdyb3VwRW51bUNvbnN0YW50IE9yYW5nZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgTHNwQ3h4SGxHcm91cE5hbWVzcGFjZSBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayBMc3BDeHhIbEdyb3VwTWVtYmVyVmFyaWFibGUgT3JhbmdlSXRhbGljCiIgfX19CiIgfX19CiIgT2JqZWN0aXZlQzoge3t7CiIgYnVpbHRpbjoge3t7CmhpZ2hsaWdodCEgbGluayBvYmpjTW9kdWxlSW1wb3J0IFJlZApoaWdobGlnaHQhIGxpbmsgb2JqY0V4Y2VwdGlvbiBSZWQKaGlnaGxpZ2h0ISBsaW5rIG9iamNQcm90b2NvbExpc3QgRmcKaGlnaGxpZ2h0ISBsaW5rIG9iamNEaXJlY3RpdmUgUmVkCmhpZ2hsaWdodCEgbGluayBvYmpjUHJvcGVydHlBdHRyaWJ1dGUgUHVycGxlCmhpZ2hsaWdodCEgbGluayBvYmpjSGlkZGVuQXJndW1lbnQgRmcKIiB9fX0KIiB9fX0KIiBDIzoge3t7CiIgYnVpbHRpbjogaHR0cHM6Ly9naXRodWIuY29tL25pY2tzcG9vbnMvdmltLWNze3t7CmhpZ2hsaWdodCEgbGluayBjc1Vuc3BlY2lmaWVkU3RhdGVtZW50IFJlZApoaWdobGlnaHQhIGxpbmsgY3NTdG9yYWdlIFJlZApoaWdobGlnaHQhIGxpbmsgY3NDbGFzcyBSZWQKaGlnaGxpZ2h0ISBsaW5rIGNzTmV3VHlwZSBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayBjc0NvbnRleHR1YWxTdGF0ZW1lbnQgUmVkCmhpZ2hsaWdodCEgbGluayBjc0ludGVycG9sYXRpb25EZWxpbWl0ZXIgUHVycGxlCmhpZ2hsaWdodCEgbGluayBjc0ludGVycG9sYXRpb24gUHVycGxlCmhpZ2hsaWdodCEgbGluayBjc0VuZENvbG9uIEZnCiIgfX19CiIgfX19CiIgUHl0aG9uOiB7e3sKIiBidWlsdGluOiB7e3sKaGlnaGxpZ2h0ISBsaW5rIHB5dGhvbkJ1aWx0aW4gQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgcHl0aG9uRXhjZXB0aW9ucyBSZWQKaGlnaGxpZ2h0ISBsaW5rIHB5dGhvbkRlY29yYXRvck5hbWUgT3JhbmdlSXRhbGljCiIgfX19CiIgcHl0aG9uLXN5bnRheDogaHR0cHM6Ly9naXRodWIuY29tL3ZpbS1weXRob24vcHl0aG9uLXN5bnRheHt7ewpoaWdobGlnaHQhIGxpbmsgcHl0aG9uRXhDbGFzcyBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayBweXRob25CdWlsdGluVHlwZSBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayBweXRob25CdWlsdGluT2JqIE9yYW5nZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgcHl0aG9uRG90dGVkTmFtZSBPcmFuZ2VJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIHB5dGhvbkJ1aWx0aW5GdW5jIEdyZWVuCmhpZ2hsaWdodCEgbGluayBweXRob25GdW5jdGlvbiBHcmVlbgpoaWdobGlnaHQhIGxpbmsgcHl0aG9uRGVjb3JhdG9yIE9yYW5nZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgcHl0aG9uSW5jbHVkZSBJbmNsdWRlCmhpZ2hsaWdodCEgbGluayBweXRob25JbXBvcnQgUHJlUHJvYwpoaWdobGlnaHQhIGxpbmsgcHl0aG9uT3BlcmF0b3IgUmVkCmhpZ2hsaWdodCEgbGluayBweXRob25Db25kaXRpb25hbCBSZWQKaGlnaGxpZ2h0ISBsaW5rIHB5dGhvblJlcGVhdCBSZWQKaGlnaGxpZ2h0ISBsaW5rIHB5dGhvbkV4Y2VwdGlvbiBSZWQKaGlnaGxpZ2h0ISBsaW5rIHB5dGhvbk5vbmUgT3JhbmdlSXRhbGljCmhpZ2hsaWdodCEgbGluayBweXRob25Db2RpbmcgR3JleQpoaWdobGlnaHQhIGxpbmsgcHl0aG9uRG90IEdyZXkKIiB9fX0KIiBzZW1zaGk6IGh0dHBzOi8vZ2l0aHViLmNvbS9udW1pcmlhcy9zZW1zaGl7e3sKY2FsbCBzOkhMKCdzZW1zaGlVbnJlc29sdmVkJywgczpwYWxldHRlLm9yYW5nZSwgczpwYWxldHRlLm5vbmUsICd1bmRlcmN1cmwnKQpoaWdobGlnaHQhIGxpbmsgc2Vtc2hpSW1wb3J0ZWQgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgc2Vtc2hpUGFyYW1ldGVyIE9yYW5nZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgc2Vtc2hpUGFyYW1ldGVyVW51c2VkIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIHNlbXNoaVNlbGYgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgc2Vtc2hpR2xvYmFsIEdyZWVuCmhpZ2hsaWdodCEgbGluayBzZW1zaGlCdWlsdGluIEdyZWVuCmhpZ2hsaWdodCEgbGluayBzZW1zaGlBdHRyaWJ1dGUgT3JhbmdlSXRhbGljCmhpZ2hsaWdodCEgbGluayBzZW1zaGlMb2NhbCBSZWQKaGlnaGxpZ2h0ISBsaW5rIHNlbXNoaUZyZWUgUmVkCmhpZ2hsaWdodCEgbGluayBzZW1zaGlTZWxlY3RlZCBDb2NIaWdobGlnaHRUZXh0CmhpZ2hsaWdodCEgbGluayBzZW1zaGlFcnJvclNpZ24gQUxFRXJyb3JTaWduCmhpZ2hsaWdodCEgbGluayBzZW1zaGlFcnJvckNoYXIgQUxFRXJyb3JTaWduCiIgfX19CiIgfX19CiIgTHVhOiB7e3sKIiBidWlsdGluOiB7e3sKaGlnaGxpZ2h0ISBsaW5rIGx1YUZ1bmMgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGx1YUZ1bmN0aW9uIFJlZApoaWdobGlnaHQhIGxpbmsgbHVhVGFibGUgRmcKaGlnaGxpZ2h0ISBsaW5rIGx1YUluIFJlZAoiIH19fQoiIHZpbS1sdWE6IGh0dHBzOi8vZ2l0aHViLmNvbS90YmFzdG9zL3ZpbS1sdWF7e3sKaGlnaGxpZ2h0ISBsaW5rIGx1YUZ1bmNDYWxsIEdyZWVuCmhpZ2hsaWdodCEgbGluayBsdWFMb2NhbCBSZWQKaGlnaGxpZ2h0ISBsaW5rIGx1YVNwZWNpYWxWYWx1ZSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgbHVhQnJhY2VzIEZnCmhpZ2hsaWdodCEgbGluayBsdWFCdWlsdEluIEJsdWVJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIGx1YU5vaXNlIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIGx1YUxhYmVsIFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgbHVhRnVuY1RhYmxlIEJsdWVJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIGx1YUZ1bmNBcmdOYW1lIEZnCmhpZ2hsaWdodCEgbGluayBsdWFFbGxpcHNpcyBSZWQKaGlnaGxpZ2h0ISBsaW5rIGx1YURvY1RhZyBHcmVlbgoiIH19fQoiIH19fQoiIEphdmE6IHt7ewoiIGJ1aWx0aW46IHt7ewpoaWdobGlnaHQhIGxpbmsgamF2YUNsYXNzRGVjbCBSZWQKaGlnaGxpZ2h0ISBsaW5rIGphdmFNZXRob2REZWNsIFJlZApoaWdobGlnaHQhIGxpbmsgamF2YVZhckFyZyBGZwpoaWdobGlnaHQhIGxpbmsgamF2YUFubm90YXRpb24gUHVycGxlCmhpZ2hsaWdodCEgbGluayBqYXZhVXNlckxhYmVsIFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgamF2YVR5cGVkZWYgT3JhbmdlSXRhbGljCmhpZ2hsaWdodCEgbGluayBqYXZhUGFyZW4gRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFQYXJlbjEgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFQYXJlbjIgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFQYXJlbjMgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFQYXJlbjQgRmcKaGlnaGxpZ2h0ISBsaW5rIGphdmFQYXJlbjUgRmcKIiB9fX0KIiB9fX0KIiBLb3RsaW46IHt7ewoiIGtvdGxpbi12aW06IGh0dHBzOi8vZ2l0aHViLmNvbS91ZGFsb3Yva290bGluLXZpbXt7ewpoaWdobGlnaHQhIGxpbmsga3RTaW1wbGVJbnRlcnBvbGF0aW9uIFB1cnBsZQpoaWdobGlnaHQhIGxpbmsga3RDb21wbGV4SW50ZXJwb2xhdGlvbiBQdXJwbGUKaGlnaGxpZ2h0ISBsaW5rIGt0Q29tcGxleEludGVycG9sYXRpb25CcmFjZSBQdXJwbGUKaGlnaGxpZ2h0ISBsaW5rIGt0U3RydWN0dXJlIFJlZApoaWdobGlnaHQhIGxpbmsga3RLZXl3b3JkIE9yYW5nZUl0YWxpYwoiIH19fQoiIH19fQoiIFNjYWxhOiB7e3sKIiBidWlsdGluOiBodHRwczovL2dpdGh1Yi5jb20vZGVyZWt3eWF0dC92aW0tc2NhbGF7e3sKaGlnaGxpZ2h0ISBsaW5rIHNjYWxhTmFtZURlZmluaXRpb24gRmcKaGlnaGxpZ2h0ISBsaW5rIHNjYWxhSW50ZXJwb2xhdGlvbkJvdW5kYXJ5IFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgc2NhbGFJbnRlcnBvbGF0aW9uIFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgc2NhbGFUeXBlT3BlcmF0b3IgUmVkCmhpZ2hsaWdodCEgbGluayBzY2FsYU9wZXJhdG9yIFJlZApoaWdobGlnaHQhIGxpbmsgc2NhbGFLZXl3b3JkTW9kaWZpZXIgUmVkCiIgfX19CiIgfX19CiIgR286IHt7ewoiIGJ1aWx0aW46IGh0dHBzOi8vZ2l0aHViLmNvbS9nb29nbGUvdmltLWZ0LWdve3t7CmhpZ2hsaWdodCEgbGluayBnb0RpcmVjdGl2ZSBSZWQKaGlnaGxpZ2h0ISBsaW5rIGdvQ29uc3RhbnRzIE9yYW5nZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgZ29EZWNsVHlwZSBSZWQKIiB9fX0KIiBwb2x5Z2xvdDoge3t7CmhpZ2hsaWdodCEgbGluayBnb1BhY2thZ2UgUmVkCmhpZ2hsaWdodCEgbGluayBnb0ltcG9ydCBSZWQKaGlnaGxpZ2h0ISBsaW5rIGdvQnVpbHRpbnMgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGdvUHJlZGVmaW5lZElkZW50aWZpZXJzIE9yYW5nZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgZ29WYXIgUmVkCiIgfX19CiIgfX19CiIgUnVzdDoge3t7CiIgYnVpbHRpbjogaHR0cHM6Ly9naXRodWIuY29tL3J1c3QtbGFuZy9ydXN0LnZpbXt7ewpoaWdobGlnaHQhIGxpbmsgcnVzdFN0cnVjdHVyZSBSZWQKaGlnaGxpZ2h0ISBsaW5rIHJ1c3RJZGVudGlmaWVyIE9yYW5nZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgcnVzdE1vZFBhdGggQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgcnVzdE1vZFBhdGhTZXAgR3JleQpoaWdobGlnaHQhIGxpbmsgcnVzdFNlbGYgT3JhbmdlSXRhbGljCmhpZ2hsaWdodCEgbGluayBydXN0U3VwZXIgT3JhbmdlSXRhbGljCmhpZ2hsaWdodCEgbGluayBydXN0RGVyaXZlVHJhaXQgUHVycGxlCmhpZ2hsaWdodCEgbGluayBydXN0RW51bVZhcmlhbnQgUHVycGxlCmhpZ2hsaWdodCEgbGluayBydXN0TWFjcm9WYXJpYWJsZSBPcmFuZ2VJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIHJ1c3RBc3NlcnQgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHJ1c3RQYW5pYyBHcmVlbgpoaWdobGlnaHQhIGxpbmsgcnVzdFB1YlNjb3BlQ3JhdGUgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgcnVzdEF0dHJpYnV0ZSBQdXJwbGUKIiB9fX0KIiB9fX0KIiBTd2lmdDoge3t7CiIgc3dpZnQudmltOiBodHRwczovL2dpdGh1Yi5jb20va2VpdGgvc3dpZnQudmlte3t7CmhpZ2hsaWdodCEgbGluayBzd2lmdEludGVycG9sYXRlZFdyYXBwZXIgUHVycGxlCmhpZ2hsaWdodCEgbGluayBzd2lmdEludGVycG9sYXRlZFN0cmluZyBQdXJwbGUKaGlnaGxpZ2h0ISBsaW5rIHN3aWZ0UHJvcGVydHkgRmcKaGlnaGxpZ2h0ISBsaW5rIHN3aWZ0VHlwZURlY2xhcmF0aW9uIFJlZApoaWdobGlnaHQhIGxpbmsgc3dpZnRDbG9zdXJlQXJndW1lbnQgT3JhbmdlSXRhbGljCmhpZ2hsaWdodCEgbGluayBzd2lmdFN0cnVjdHVyZSBSZWQKIiB9fX0KIiB9fX0KIiBQSFA6IHt7ewoiIGJ1aWx0aW46IGh0dHBzOi8vamFzb253b29mLmNvbS9naXR3ZWIvP3A9dmltLXN5bnRheC5naXQ7YT1ibG9iO2Y9cGhwLnZpbTtoYj1IRUFEe3t7CmhpZ2hsaWdodCEgbGluayBwaHBWYXJTZWxlY3RvciBGZwpoaWdobGlnaHQhIGxpbmsgcGhwSWRlbnRpZmllciBGZwpoaWdobGlnaHQhIGxpbmsgcGhwRGVmaW5lIEdyZWVuCmhpZ2hsaWdodCEgbGluayBwaHBTdHJ1Y3R1cmUgUmVkCmhpZ2hsaWdodCEgbGluayBwaHBTcGVjaWFsRnVuY3Rpb24gR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHBocEludGVycFNpbXBsZUN1cmx5IFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgcGhwQ29tcGFyaXNvbiBSZWQKaGlnaGxpZ2h0ISBsaW5rIHBocE1ldGhvZHNWYXIgRmcKaGlnaGxpZ2h0ISBsaW5rIHBocEludGVycFZhcm5hbWUgRmcKaGlnaGxpZ2h0ISBsaW5rIHBocE1lbWJlclNlbGVjdG9yIFJlZApoaWdobGlnaHQhIGxpbmsgcGhwTGFiZWwgUmVkCiIgfX19CiIgcGhwLnZpbTogaHR0cHM6Ly9naXRodWIuY29tL1N0YW5BbmdlbG9mZi9waHAudmlte3t7CmhpZ2hsaWdodCEgbGluayBwaHBQYXJlbnQgRmcKaGlnaGxpZ2h0ISBsaW5rIHBocE5vd0RvYyBZZWxsb3cKaGlnaGxpZ2h0ISBsaW5rIHBocEZ1bmN0aW9uIEdyZWVuCmhpZ2hsaWdodCEgbGluayBwaHBNZXRob2QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHBocENsYXNzIEJsdWVJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIHBocFN1cGVyZ2xvYmFscyBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayBwaHBOdWxsVmFsdWUgT3JhbmdlSXRhbGljCiIgfX19CiIgfX19CiIgUnVieToge3t7CiIgYnVpbHRpbjogaHR0cHM6Ly9naXRodWIuY29tL3ZpbS1ydWJ5L3ZpbS1ydWJ5e3t7CmhpZ2hsaWdodCEgbGluayBydWJ5S2V5d29yZEFzTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayBydWJ5SW50ZXJwb2xhdGlvbiBQdXJwbGUKaGlnaGxpZ2h0ISBsaW5rIHJ1YnlJbnRlcnBvbGF0aW9uRGVsaW1pdGVyIFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgcnVieVN0cmluZ0RlbGltaXRlciBZZWxsb3cKaGlnaGxpZ2h0ISBsaW5rIHJ1YnlCbG9ja1BhcmFtZXRlckxpc3QgRmcKaGlnaGxpZ2h0ISBsaW5rIHJ1YnlEZWZpbmUgUmVkCmhpZ2hsaWdodCEgbGluayBydWJ5TW9kdWxlTmFtZSBSZWQKaGlnaGxpZ2h0ISBsaW5rIHJ1YnlBY2Nlc3MgUmVkCmhpZ2hsaWdodCEgbGluayBydWJ5TWFjcm8gUmVkCmhpZ2hsaWdodCEgbGluayBydWJ5U3ltYm9sIEZnCiIgfX19CiIgfX19CiIgSGFza2VsbDoge3t7CiIgaGFza2VsbC12aW06IGh0dHBzOi8vZ2l0aHViLmNvbS9uZW92aW1oYXNrZWxsL2hhc2tlbGwtdmlte3t7CmhpZ2hsaWdodCEgbGluayBoYXNrZWxsQnJhY2tldHMgRmcKaGlnaGxpZ2h0ISBsaW5rIGhhc2tlbGxJZGVudGlmaWVyIE9yYW5nZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgaGFza2VsbERlY2wgUmVkCmhpZ2hsaWdodCEgbGluayBoYXNrZWxsVHlwZSBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayBoYXNrZWxsRGVjbEtleXdvcmQgUmVkCmhpZ2hsaWdodCEgbGluayBoYXNrZWxsV2hlcmUgUmVkCmhpZ2hsaWdodCEgbGluayBoYXNrZWxsRGVyaXZpbmcgUmVkCmhpZ2hsaWdodCEgbGluayBoYXNrZWxsRm9yZWlnbktleXdvcmRzIFJlZAoiIH19fQoiIH19fQoiIFBlcmw6IHt7ewoiIGJ1aWx0aW46IGh0dHBzOi8vZ2l0aHViLmNvbS92aW0tcGVybC92aW0tcGVybHt7ewpoaWdobGlnaHQhIGxpbmsgcGVybFN0YXRlbWVudFBhY2thZ2UgUmVkCmhpZ2hsaWdodCEgbGluayBwZXJsU3RhdGVtZW50SW5jbHVkZSBSZWQKaGlnaGxpZ2h0ISBsaW5rIHBlcmxTdGF0ZW1lbnRTdG9yYWdlIFJlZApoaWdobGlnaHQhIGxpbmsgcGVybFN0YXRlbWVudExpc3QgUmVkCmhpZ2hsaWdodCEgbGluayBwZXJsTWF0Y2hTdGFydEVuZCBSZWQKaGlnaGxpZ2h0ISBsaW5rIHBlcmxWYXJTaW1wbGVNZW1iZXJOYW1lIEdyZWVuCmhpZ2hsaWdodCEgbGluayBwZXJsVmFyU2ltcGxlTWVtYmVyIEZnCmhpZ2hsaWdodCEgbGluayBwZXJsTWV0aG9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayBwb2RWZXJiYXRpbUxpbmUgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHBvZENtZFRleHQgWWVsbG93CmhpZ2hsaWdodCEgbGluayBwZXJsVmFyUGxhaW4gRmcKaGlnaGxpZ2h0ISBsaW5rIHBlcmxWYXJQbGFpbjIgRmcKIiB9fX0KIiB9fX0KIiBPQ2FtbDoge3t7CiIgYnVpbHRpbjogaHR0cHM6Ly9naXRodWIuY29tL3JncmluYmVyZy92aW0tb2NhbWx7e3sKaGlnaGxpZ2h0ISBsaW5rIG9jYW1sQXJyb3cgUmVkCmhpZ2hsaWdodCEgbGluayBvY2FtbEVxdWFsIFJlZApoaWdobGlnaHQhIGxpbmsgb2NhbWxPcGVyYXRvciBSZWQKaGlnaGxpZ2h0ISBsaW5rIG9jYW1sS2V5Q2hhciBSZWQKaGlnaGxpZ2h0ISBsaW5rIG9jYW1sTW9kUGF0aCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgb2NhbWxGdWxsTW9kIEdyZWVuCmhpZ2hsaWdodCEgbGluayBvY2FtbE1vZHVsZSBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayBvY2FtbENvbnN0cnVjdG9yIE9yYW5nZQpoaWdobGlnaHQhIGxpbmsgb2NhbWxNb2RQYXJhbSBGZwpoaWdobGlnaHQhIGxpbmsgb2NhbWxNb2RQYXJhbTEgRmcKaGlnaGxpZ2h0ISBsaW5rIG9jYW1sQW55VmFyIEZnICIgYXF1YQpoaWdobGlnaHQhIGxpbmsgb2NhbWxQcHhFbmNsIFJlZApoaWdobGlnaHQhIGxpbmsgb2NhbWxQcHhJZGVudGlmaWVyIEZnCmhpZ2hsaWdodCEgbGluayBvY2FtbFNpZ0VuY2wgUmVkCmhpZ2hsaWdodCEgbGluayBvY2FtbE1vZFBhcmFtMSBGZwoiIH19fQoiIH19fQoiIEVybGFuZzoge3t7CiIgYnVpbHRpbjogaHR0cHM6Ly9naXRodWIuY29tL3ZpbS1lcmxhbmcvdmltLWVybGFuZy1ydW50aW1le3t7CmhpZ2hsaWdodCEgbGluayBlcmxhbmdBdG9tIEZnCmhpZ2hsaWdodCEgbGluayBlcmxhbmdWYXJpYWJsZSBGZwpoaWdobGlnaHQhIGxpbmsgZXJsYW5nTG9jYWxGdW5jUmVmIEdyZWVuCmhpZ2hsaWdodCEgbGluayBlcmxhbmdMb2NhbEZ1bmNDYWxsIEdyZWVuCmhpZ2hsaWdodCEgbGluayBlcmxhbmdHbG9iYWxGdW5jUmVmIEdyZWVuCmhpZ2hsaWdodCEgbGluayBlcmxhbmdHbG9iYWxGdW5jQ2FsbCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgZXJsYW5nQXR0cmlidXRlIEJsdWVJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIGVybGFuZ1BpcGUgUmVkCiIgfX19CiIgfX19CiIgRWxpeGlyOiB7e3sKIiB2aW0tZWxpeGlyOiBodHRwczovL2dpdGh1Yi5jb20vZWxpeGlyLWVkaXRvcnMvdmltLWVsaXhpcnt7ewpoaWdobGlnaHQhIGxpbmsgZWxpeGlyU3RyaW5nRGVsaW1pdGVyIFllbGxvdwpoaWdobGlnaHQhIGxpbmsgZWxpeGlyS2V5d29yZCBSZWQKaGlnaGxpZ2h0ISBsaW5rIGVsaXhpckludGVycG9sYXRpb24gUHVycGxlCmhpZ2hsaWdodCEgbGluayBlbGl4aXJJbnRlcnBvbGF0aW9uRGVsaW1pdGVyIFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgZWxpeGlyU2VsZiBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayBlbGl4aXJQc2V1ZG9WYXJpYWJsZSBPcmFuZ2VJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIGVsaXhpck1vZHVsZURlZmluZSBSZWQKaGlnaGxpZ2h0ISBsaW5rIGVsaXhpckJsb2NrRGVmaW5pdGlvbiBSZWQKaGlnaGxpZ2h0ISBsaW5rIGVsaXhpckRlZmluZSBSZWQKaGlnaGxpZ2h0ISBsaW5rIGVsaXhpclByaXZhdGVEZWZpbmUgUmVkCmhpZ2hsaWdodCEgbGluayBlbGl4aXJHdWFyZCBSZWQKaGlnaGxpZ2h0ISBsaW5rIGVsaXhpclByaXZhdGVHdWFyZCBSZWQKaGlnaGxpZ2h0ISBsaW5rIGVsaXhpclByb3RvY29sRGVmaW5lIFJlZApoaWdobGlnaHQhIGxpbmsgZWxpeGlySW1wbERlZmluZSBSZWQKaGlnaGxpZ2h0ISBsaW5rIGVsaXhpclJlY29yZERlZmluZSBSZWQKaGlnaGxpZ2h0ISBsaW5rIGVsaXhpclByaXZhdGVSZWNvcmREZWZpbmUgUmVkCmhpZ2hsaWdodCEgbGluayBlbGl4aXJNYWNyb0RlZmluZSBSZWQKaGlnaGxpZ2h0ISBsaW5rIGVsaXhpclByaXZhdGVNYWNyb0RlZmluZSBSZWQKaGlnaGxpZ2h0ISBsaW5rIGVsaXhpckRlbGVnYXRlRGVmaW5lIFJlZApoaWdobGlnaHQhIGxpbmsgZWxpeGlyT3ZlcnJpZGFibGVEZWZpbmUgUmVkCmhpZ2hsaWdodCEgbGluayBlbGl4aXJFeGNlcHRpb25EZWZpbmUgUmVkCmhpZ2hsaWdodCEgbGluayBlbGl4aXJDYWxsYmFja0RlZmluZSBSZWQKaGlnaGxpZ2h0ISBsaW5rIGVsaXhpclN0cnVjdERlZmluZSBSZWQKaGlnaGxpZ2h0ISBsaW5rIGVsaXhpckV4VW5pdE1hY3JvIFJlZAoiIH19fQoiIH19fQoiIENvbW1vbiBMaXNwOiB7e3sKIiBidWlsdGluOiBodHRwOi8vd3d3LmRyY2hpcC5vcmcvYXN0cm9uYXV0L3ZpbS9pbmRleC5odG1sI1NZTlRBWF9MSVNQe3t7CmhpZ2hsaWdodCEgbGluayBsaXNwQXRvbU1hcmsgUHVycGxlCmhpZ2hsaWdodCEgbGluayBsaXNwS2V5IE9yYW5nZQpoaWdobGlnaHQhIGxpbmsgbGlzcEZ1bmMgR3JlZW4KIiB9fX0KIiB9fX0KIiBDbG9qdXJlOiB7e3sKIiBidWlsdGluOiBodHRwczovL2dpdGh1Yi5jb20vZ3Vucy92aW0tY2xvanVyZS1zdGF0aWN7e3sKaGlnaGxpZ2h0ISBsaW5rIGNsb2p1cmVNYWNybyBSZWQKaGlnaGxpZ2h0ISBsaW5rIGNsb2p1cmVGdW5jIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbG9qdXJlQ29uc3RhbnQgT3JhbmdlSXRhbGljCmhpZ2hsaWdodCEgbGluayBjbG9qdXJlU3BlY2lhbCBSZWQKaGlnaGxpZ2h0ISBsaW5rIGNsb2p1cmVEZWZpbmUgUmVkCmhpZ2hsaWdodCEgbGluayBjbG9qdXJlS2V5d29yZCBCbHVlCmhpZ2hsaWdodCEgbGluayBjbG9qdXJlVmFyaWFibGUgRmcKaGlnaGxpZ2h0ISBsaW5rIGNsb2p1cmVNZXRhIFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgY2xvanVyZURlcmVmIFB1cnBsZQoiIH19fQoiIH19fQoiIE1hdGxhYjoge3t7CiIgYnVpbHRpbjoge3t7CmhpZ2hsaWdodCEgbGluayBtYXRsYWJTZW1pY29sb24gRmcKaGlnaGxpZ2h0ISBsaW5rIG1hdGxhYkZ1bmN0aW9uIFJlZEl0YWxpYwpoaWdobGlnaHQhIGxpbmsgbWF0bGFiSW1wbGljaXQgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIG1hdGxhYkRlbGltaXRlciBGZwpoaWdobGlnaHQhIGxpbmsgbWF0bGFiT3BlcmF0b3IgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIG1hdGxhYkFyaXRobWV0aWNPcGVyYXRvciBSZWQKaGlnaGxpZ2h0ISBsaW5rIG1hdGxhYkFyaXRobWV0aWNPcGVyYXRvciBSZWQKaGlnaGxpZ2h0ISBsaW5rIG1hdGxhYlJlbGF0aW9uYWxPcGVyYXRvciBSZWQKaGlnaGxpZ2h0ISBsaW5rIG1hdGxhYlJlbGF0aW9uYWxPcGVyYXRvciBSZWQKaGlnaGxpZ2h0ISBsaW5rIG1hdGxhYkxvZ2ljYWxPcGVyYXRvciBSZWQKIiB9fX0KIiB9fX0KIiBTaGVsbDoge3t7CiIgYnVpbHRpbjogaHR0cDovL3d3dy5kcmNoaXAub3JnL2FzdHJvbmF1dC92aW0vaW5kZXguaHRtbCNTWU5UQVhfU0h7e3sKaGlnaGxpZ2h0ISBsaW5rIHNoUmFuZ2UgRmcKaGlnaGxpZ2h0ISBsaW5rIHNoT3B0aW9uIFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgc2hRdW90ZSBZZWxsb3cKaGlnaGxpZ2h0ISBsaW5rIHNoVmFyaWFibGUgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgc2hEZXJlZlNpbXBsZSBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayBzaERlcmVmVmFyIEJsdWVJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIHNoRGVyZWZTcGVjaWFsIEJsdWVJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIHNoRGVyZWZPZmYgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgc2hWYXJBc3NpZ24gUmVkCmhpZ2hsaWdodCEgbGluayBzaEZ1bmN0aW9uT25lIEdyZWVuCmhpZ2hsaWdodCEgbGluayBzaEZ1bmN0aW9uS2V5IFJlZAoiIH19fQoiIH19fQoiIFpzaDoge3t7CiIgYnVpbHRpbjogaHR0cHM6Ly9naXRodWIuY29tL2NocmlzYnJhL3ZpbS16c2h7e3sKaGlnaGxpZ2h0ISBsaW5rIHpzaE9wdGlvbiBCbHVlSXRhbGljCmhpZ2hsaWdodCEgbGluayB6c2hTdWJzdCBPcmFuZ2UKaGlnaGxpZ2h0ISBsaW5rIHpzaEZ1bmN0aW9uIEdyZWVuCiIgfX19CiIgfX19CiIgUG93ZXJTaGVsbDoge3t7CiIgdmltLXBzMTogaHR0cHM6Ly9naXRodWIuY29tL1BQcm92b3N0L3ZpbS1wczF7e3sKaGlnaGxpZ2h0ISBsaW5rIHBzMUZ1bmN0aW9uSW52b2NhdGlvbiBHcmVlbgpoaWdobGlnaHQhIGxpbmsgcHMxRnVuY3Rpb25EZWNsYXJhdGlvbiBHcmVlbgpoaWdobGlnaHQhIGxpbmsgcHMxSW50ZXJwb2xhdGlvbkRlbGltaXRlciBQdXJwbGUKaGlnaGxpZ2h0ISBsaW5rIHBzMUJ1aWx0SW4gQmx1ZUl0YWxpYwoiIH19fQoiIH19fQoiIFZpbUw6IHt7ewpoaWdobGlnaHQhIGxpbmsgdmltTGV0IFJlZApoaWdobGlnaHQhIGxpbmsgdmltRnVuY3Rpb24gR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHZpbUlzQ29tbWFuZCBGZwpoaWdobGlnaHQhIGxpbmsgdmltVXNlckZ1bmMgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHZpbUZ1bmNOYW1lIEdyZWVuCmhpZ2hsaWdodCEgbGluayB2aW1NYXAgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgdmltTm90YXRpb24gUHVycGxlCmhpZ2hsaWdodCEgbGluayB2aW1NYXBMaHMgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIHZpbU1hcFJocyBHcmVlbgpoaWdobGlnaHQhIGxpbmsgdmltU2V0RXF1YWwgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgdmltU2V0U2VwIEZnCmhpZ2hsaWdodCEgbGluayB2aW1PcHRpb24gQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgdmltVXNlckF0dHJiS2V5IEJsdWVJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIHZpbVVzZXJBdHRyYiBHcmVlbgpoaWdobGlnaHQhIGxpbmsgdmltQXV0b0NtZFNmeExpc3QgT3JhbmdlCmhpZ2hsaWdodCEgbGluayB2aW1TeW5UeXBlIE9yYW5nZQpoaWdobGlnaHQhIGxpbmsgdmltSGlCYW5nIE9yYW5nZQpoaWdobGlnaHQhIGxpbmsgdmltU2V0IEJsdWVJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIHZpbVNldFNlcCBHcmV5CiIgfX19CiIgTWFrZWZpbGU6IHt7ewpoaWdobGlnaHQhIGxpbmsgbWFrZUlkZW50IFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgbWFrZVNwZWNUYXJnZXQgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgbWFrZVRhcmdldCBPcmFuZ2UKaGlnaGxpZ2h0ISBsaW5rIG1ha2VDb21tYW5kcyBSZWQKIiB9fX0KIiBDTWFrZToge3t7CmhpZ2hsaWdodCEgbGluayBjbWFrZUNvbW1hbmQgUmVkCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXY29uZmlndXJlX3BhY2thZ2VfY29uZmlnX2ZpbGUgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgY21ha2VLV3dyaXRlX2Jhc2ljX3BhY2thZ2VfdmVyc2lvbl9maWxlIEJsdWVJdGFsaWMKaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1dFeHRlcm5hbFByb2plY3QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1dhZGRfY29tcGlsZV9kZWZpbml0aW9ucyBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2FkZF9jb21waWxlX29wdGlvbnMgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1dhZGRfY3VzdG9tX2NvbW1hbmQgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1dhZGRfY3VzdG9tX3RhcmdldCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2FkZF9kZWZpbml0aW9ucyBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2FkZF9kZXBlbmRlbmNpZXMgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1dhZGRfZXhlY3V0YWJsZSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2FkZF9saWJyYXJ5IEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXYWRkX2xpbmtfb3B0aW9ucyBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2FkZF9zdWJkaXJlY3RvcnkgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1dhZGRfdGVzdCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2J1aWxkX2NvbW1hbmQgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1djbWFrZV9ob3N0X3N5c3RlbV9pbmZvcm1hdGlvbiBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2NtYWtlX21pbmltdW1fcmVxdWlyZWQgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1djbWFrZV9wYXJzZV9hcmd1bWVudHMgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1djbWFrZV9wb2xpY3kgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1djb25maWd1cmVfZmlsZSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2NyZWF0ZV90ZXN0X3NvdXJjZWxpc3QgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1djdGVzdF9idWlsZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2N0ZXN0X2NvbmZpZ3VyZSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2N0ZXN0X2NvdmVyYWdlIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXY3Rlc3RfbWVtY2hlY2sgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1djdGVzdF9ydW5fc2NyaXB0IEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXY3Rlc3Rfc3RhcnQgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1djdGVzdF9zdWJtaXQgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1djdGVzdF90ZXN0IEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXY3Rlc3RfdXBkYXRlIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXY3Rlc3RfdXBsb2FkIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXZGVmaW5lX3Byb3BlcnR5IEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXZG94eWdlbl9hZGRfZG9jcyBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2VuYWJsZV9sYW5ndWFnZSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2VuYWJsZV90ZXN0aW5nIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXZXhlY19wcm9ncmFtIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXZXhlY3V0ZV9wcm9jZXNzIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXZXhwb3J0IEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXZXhwb3J0X2xpYnJhcnlfZGVwZW5kZW5jaWVzIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXZmlsZSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2ZpbmRfZmlsZSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2ZpbmRfbGlicmFyeSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2ZpbmRfcGFja2FnZSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2ZpbmRfcGF0aCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2ZpbmRfcHJvZ3JhbSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2ZsdGtfd3JhcF91aSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2ZvcmVhY2ggR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1dmdW5jdGlvbiBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2dldF9jbWFrZV9wcm9wZXJ0eSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2dldF9kaXJlY3RvcnlfcHJvcGVydHkgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1dnZXRfZmlsZW5hbWVfY29tcG9uZW50IEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXZ2V0X3Byb3BlcnR5IEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXZ2V0X3NvdXJjZV9maWxlX3Byb3BlcnR5IEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXZ2V0X3RhcmdldF9wcm9wZXJ0eSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2dldF90ZXN0X3Byb3BlcnR5IEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXaWYgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1dpbmNsdWRlIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXaW5jbHVkZV9kaXJlY3RvcmllcyBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2luY2x1ZGVfZXh0ZXJuYWxfbXNwcm9qZWN0IEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXaW5jbHVkZV9ndWFyZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2luc3RhbGwgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1dpbnN0YWxsX2ZpbGVzIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXaW5zdGFsbF9wcm9ncmFtcyBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2luc3RhbGxfdGFyZ2V0cyBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2xpbmtfZGlyZWN0b3JpZXMgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1dsaXN0IEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXbG9hZF9jYWNoZSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV2xvYWRfY29tbWFuZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV21hY3JvIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXbWFya19hc19hZHZhbmNlZCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV21hdGggR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1dtZXNzYWdlIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXb3B0aW9uIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXcHJvamVjdCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV3F0X3dyYXBfY3BwIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXcXRfd3JhcF91aSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV3JlbW92ZSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV3NlcGFyYXRlX2FyZ3VtZW50cyBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV3NldCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV3NldF9kaXJlY3RvcnlfcHJvcGVydGllcyBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV3NldF9wcm9wZXJ0eSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV3NldF9zb3VyY2VfZmlsZXNfcHJvcGVydGllcyBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV3NldF90YXJnZXRfcHJvcGVydGllcyBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV3NldF90ZXN0c19wcm9wZXJ0aWVzIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXc291cmNlX2dyb3VwIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXc3RyaW5nIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXc3ViZGlycyBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV3RhcmdldF9jb21waWxlX2RlZmluaXRpb25zIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXdGFyZ2V0X2NvbXBpbGVfZmVhdHVyZXMgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1d0YXJnZXRfY29tcGlsZV9vcHRpb25zIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXdGFyZ2V0X2luY2x1ZGVfZGlyZWN0b3JpZXMgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1d0YXJnZXRfbGlua19kaXJlY3RvcmllcyBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV3RhcmdldF9saW5rX2xpYnJhcmllcyBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV3RhcmdldF9saW5rX29wdGlvbnMgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1d0YXJnZXRfcHJlY29tcGlsZV9oZWFkZXJzIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXdGFyZ2V0X3NvdXJjZXMgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1d0cnlfY29tcGlsZSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV3RyeV9ydW4gR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1d1bnNldCBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV3VzZV9tYW5nbGVkX21lc2EgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGNtYWtlS1d2YXJpYWJsZV9yZXF1aXJlcyBHcmVlbgpoaWdobGlnaHQhIGxpbmsgY21ha2VLV3ZhcmlhYmxlX3dhdGNoIEdyZWVuCmhpZ2hsaWdodCEgbGluayBjbWFrZUtXd3JpdGVfZmlsZSBHcmVlbgoiIH19fQoiIEpzb246IHt7ewpoaWdobGlnaHQhIGxpbmsganNvbktleXdvcmQgUmVkCmhpZ2hsaWdodCEgbGluayBqc29uU3RyaW5nIEdyZWVuCmhpZ2hsaWdodCEgbGluayBqc29uQm9vbGVhbiBCbHVlCmhpZ2hsaWdodCEgbGluayBqc29uTm9pc2UgR3JleQpoaWdobGlnaHQhIGxpbmsganNvblF1b3RlIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIGpzb25CcmFjZXMgRmcKIiB9fX0KIiBZYW1sOiB7e3sKaGlnaGxpZ2h0ISBsaW5rIHlhbWxLZXkgUmVkCmhpZ2hsaWdodCEgbGluayB5YW1sQ29uc3RhbnQgQmx1ZUl0YWxpYwpoaWdobGlnaHQhIGxpbmsgeWFtbFN0cmluZyBHcmVlbgoiIH19fQoiIFRvbWw6IHt7ewpjYWxsIHM6SEwoJ3RvbWxUYWJsZScsIHM6cGFsZXR0ZS5wdXJwbGUsIHM6cGFsZXR0ZS5ub25lLCAnYm9sZCcpCmhpZ2hsaWdodCEgbGluayB0b21sS2V5IFJlZApoaWdobGlnaHQhIGxpbmsgdG9tbEJvb2xlYW4gQmx1ZQpoaWdobGlnaHQhIGxpbmsgdG9tbFN0cmluZyBHcmVlbgpoaWdobGlnaHQhIGxpbmsgdG9tbFRhYmxlQXJyYXkgdG9tbFRhYmxlCiIgfX19CiIgRGlmZjoge3t7CmhpZ2hsaWdodCEgbGluayBkaWZmQWRkZWQgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIGRpZmZSZW1vdmVkIFJlZApoaWdobGlnaHQhIGxpbmsgZGlmZkNoYW5nZWQgQmx1ZQpoaWdobGlnaHQhIGxpbmsgZGlmZk9sZEZpbGUgWWVsbG93CmhpZ2hsaWdodCEgbGluayBkaWZmTmV3RmlsZSBPcmFuZ2UKaGlnaGxpZ2h0ISBsaW5rIGRpZmZGaWxlIFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgZGlmZkxpbmUgR3JleQpoaWdobGlnaHQhIGxpbmsgZGlmZkluZGV4TGluZSBQdXJwbGUKIiB9fX0KIiBHaXQgQ29tbWl0OiB7e3sKaGlnaGxpZ2h0ISBsaW5rIGdpdGNvbW1pdFN1bW1hcnkgUmVkCmhpZ2hsaWdodCEgbGluayBnaXRjb21taXRVbnRyYWNrZWQgR3JleQpoaWdobGlnaHQhIGxpbmsgZ2l0Y29tbWl0RGlzY2FyZGVkIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIGdpdGNvbW1pdFNlbGVjdGVkIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIGdpdGNvbW1pdFVubWVyZ2VkIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIGdpdGNvbW1pdE9uQnJhbmNoIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIGdpdGNvbW1pdEFycm93IEdyZXkKaGlnaGxpZ2h0ISBsaW5rIGdpdGNvbW1pdEZpbGUgR3JlZW4KIiB9fX0KIiBJTkk6IHt7ewpjYWxsIHM6SEwoJ2Rvc2luaUhlYWRlcicsIHM6cGFsZXR0ZS5yZWQsIHM6cGFsZXR0ZS5ub25lLCAnYm9sZCcpCmhpZ2hsaWdodCEgbGluayBkb3NpbmlMYWJlbCBCbHVlCmhpZ2hsaWdodCEgbGluayBkb3NpbmlWYWx1ZSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgZG9zaW5pTnVtYmVyIEdyZWVuCiIgfX19CiIgSGVscDoge3t7CmNhbGwgczpITCgnaGVscE5vdGUnLCBzOnBhbGV0dGUucHVycGxlLCBzOnBhbGV0dGUubm9uZSwgJ2JvbGQnKQpjYWxsIHM6SEwoJ2hlbHBIZWFkbGluZScsIHM6cGFsZXR0ZS5yZWQsIHM6cGFsZXR0ZS5ub25lLCAnYm9sZCcpCmNhbGwgczpITCgnaGVscEhlYWRlcicsIHM6cGFsZXR0ZS5vcmFuZ2UsIHM6cGFsZXR0ZS5ub25lLCAnYm9sZCcpCmNhbGwgczpITCgnaGVscFVSTCcsIHM6cGFsZXR0ZS5ncmVlbiwgczpwYWxldHRlLm5vbmUsICd1bmRlcmxpbmUnKQpjYWxsIHM6SEwoJ2hlbHBIeXBlclRleHRFbnRyeScsIHM6cGFsZXR0ZS5ibHVlLCBzOnBhbGV0dGUubm9uZSwgJ2JvbGQnKQpoaWdobGlnaHQhIGxpbmsgaGVscEh5cGVyVGV4dEp1bXAgQmx1ZQpoaWdobGlnaHQhIGxpbmsgaGVscENvbW1hbmQgWWVsbG93CmhpZ2hsaWdodCEgbGluayBoZWxwRXhhbXBsZSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgaGVscFNwZWNpYWwgUHVycGxlCmhpZ2hsaWdodCEgbGluayBoZWxwU2VjdGlvbkRlbGltIEdyZXkKIiB9fX0KIiB9fX0KIiBQbHVnaW5zOiB7e3sKIiBqdW5lZ3Vubi92aW0tcGx1Z3t7ewpjYWxsIHM6SEwoJ3BsdWcxJywgczpwYWxldHRlLnJlZCwgczpwYWxldHRlLm5vbmUsICdib2xkJykKY2FsbCBzOkhMKCdwbHVnTnVtYmVyJywgczpwYWxldHRlLnllbGxvdywgczpwYWxldHRlLm5vbmUsICdib2xkJykKaGlnaGxpZ2h0ISBsaW5rIHBsdWcyIEJsdWUKaGlnaGxpZ2h0ISBsaW5rIHBsdWdCcmFja2V0IEJsdWUKaGlnaGxpZ2h0ISBsaW5rIHBsdWdOYW1lIEdyZWVuCmhpZ2hsaWdodCEgbGluayBwbHVnRGFzaCBSZWQKaGlnaGxpZ2h0ISBsaW5rIHBsdWdOb3RMb2FkZWQgR3JleQpoaWdobGlnaHQhIGxpbmsgcGx1Z0gyIFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgcGx1Z01lc3NhZ2UgUHVycGxlCmhpZ2hsaWdodCEgbGluayBwbHVnRXJyb3IgUmVkCmhpZ2hsaWdodCEgbGluayBwbHVnUmVsRGF0ZSBHcmV5CmhpZ2hsaWdodCEgbGluayBwbHVnU3RhciBQdXJwbGUKaGlnaGxpZ2h0ISBsaW5rIHBsdWdVcGRhdGUgQmx1ZQpoaWdobGlnaHQhIGxpbmsgcGx1Z0RlbGV0ZWQgR3JleQpoaWdobGlnaHQhIGxpbmsgcGx1Z0VkZ2UgUHVycGxlCiIgfX19CiIgbmVvY2xpZGUvY29jLm52aW17e3sKaWYgczpjb25maWd1cmF0aW9uLmN1cnJlbnRfd29yZCA9PSMgJ2JvbGQnCiAgY2FsbCBzOkhMKCdDb2NIaWdobGlnaHRUZXh0JywgczpwYWxldHRlLm5vbmUsIHM6cGFsZXR0ZS5ub25lLCAnYm9sZCcpCmVsc2VpZiBzOmNvbmZpZ3VyYXRpb24uY3VycmVudF93b3JkID09IyAndW5kZXJsaW5lJwogIGNhbGwgczpITCgnQ29jSGlnaGxpZ2h0VGV4dCcsIHM6cGFsZXR0ZS5ub25lLCBzOnBhbGV0dGUubm9uZSwgJ3VuZGVybGluZScpCmVsc2VpZiBzOmNvbmZpZ3VyYXRpb24uY3VycmVudF93b3JkID09IyAnaXRhbGljJwogIGNhbGwgczpITCgnQ29jSGlnaGxpZ2h0VGV4dCcsIHM6cGFsZXR0ZS5ub25lLCBzOnBhbGV0dGUubm9uZSwgJ2l0YWxpYycpCmVsc2VpZiBzOmNvbmZpZ3VyYXRpb24uY3VycmVudF93b3JkID09IyAnZ3JleSBiYWNrZ3JvdW5kJwogIGNhbGwgczpITCgnQ29jSGlnaGxpZ2h0VGV4dCcsIHM6cGFsZXR0ZS5ub25lLCBzOnBhbGV0dGUuYmcxKQplbmRpZgpjYWxsIHM6SEwoJ0NvY0hvdmVyUmFuZ2UnLCBzOnBhbGV0dGUubm9uZSwgczpwYWxldHRlLm5vbmUsICdib2xkLHVuZGVybGluZScpCmNhbGwgczpITCgnQ29jSGludEhpZ2hsaWdodCcsIHM6cGFsZXR0ZS5ub25lLCBzOnBhbGV0dGUubm9uZSwgJ3VuZGVyY3VybCcsIHM6cGFsZXR0ZS5ncmVlbikKY2FsbCBzOkhMKCdDb2NFcnJvckZsb2F0JywgczpwYWxldHRlLnJlZCwgczpwYWxldHRlLmJnMikKY2FsbCBzOkhMKCdDb2NXYXJuaW5nRmxvYXQnLCBzOnBhbGV0dGUueWVsbG93LCBzOnBhbGV0dGUuYmcyKQpjYWxsIHM6SEwoJ0NvY0luZm9GbG9hdCcsIHM6cGFsZXR0ZS5ibHVlLCBzOnBhbGV0dGUuYmcyKQpjYWxsIHM6SEwoJ0NvY0hpbnRGbG9hdCcsIHM6cGFsZXR0ZS5ncmVlbiwgczpwYWxldHRlLmJnMikKaWYgczpjb25maWd1cmF0aW9uLnRyYW5zcGFyZW50X2JhY2tncm91bmQKICBjYWxsIHM6SEwoJ0NvY0hpbnRTaWduJywgczpwYWxldHRlLnB1cnBsZSwgczpwYWxldHRlLm5vbmUpCmVsc2UKICBjYWxsIHM6SEwoJ0NvY0hpbnRTaWduJywgczpwYWxldHRlLnB1cnBsZSwgczpwYWxldHRlLmJnMSkKZW5kaWYKaGlnaGxpZ2h0ISBsaW5rIENvY0NvZGVMZW5zIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIENvY0Vycm9yU2lnbiBBTEVFcnJvclNpZ24KaGlnaGxpZ2h0ISBsaW5rIENvY1dhcm5pbmdTaWduIEFMRVdhcm5pbmdTaWduCmhpZ2hsaWdodCEgbGluayBDb2NJbmZvU2lnbiBBTEVJbmZvU2lnbgpoaWdobGlnaHQhIGxpbmsgQ29jSGludFNpZ24gTGFiZWwKaGlnaGxpZ2h0ISBsaW5rIENvY0Vycm9ySGlnaGxpZ2h0IEFMRUVycm9yCmhpZ2hsaWdodCEgbGluayBDb2NXYXJuaW5nSGlnaGxpZ2h0IEFMRVdhcm5pbmcKaGlnaGxpZ2h0ISBsaW5rIENvY0luZm9IaWdobGlnaHQgQUxFSW5mbwpoaWdobGlnaHQhIGxpbmsgQ29jV2FybmluZ1ZpcnR1YWxUZXh0IEFMRVZpcnR1YWxUZXh0V2FybmluZwpoaWdobGlnaHQhIGxpbmsgQ29jRXJyb3JWaXJ0dWFsVGV4dCBBTEVWaXJ0dWFsVGV4dEVycm9yCmhpZ2hsaWdodCEgbGluayBDb2NJbmZvVmlydHVhbFRleHQgQUxFVmlydHVhbFRleHRJbmZvCmhpZ2hsaWdodCEgbGluayBDb2NIaW50VmlydHVhbFRleHQgQUxFVmlydHVhbFRleHRJbmZvCmhpZ2hsaWdodCEgbGluayBDb2NHaXRBZGRlZFNpZ24gR2l0R3V0dGVyQWRkCmhpZ2hsaWdodCEgbGluayBDb2NHaXRDaGFuZ2VSZW1vdmVkU2lnbiBHaXRHdXR0ZXJDaGFuZ2VEZWxldGUKaGlnaGxpZ2h0ISBsaW5rIENvY0dpdENoYW5nZWRTaWduIEdpdEd1dHRlckNoYW5nZQpoaWdobGlnaHQhIGxpbmsgQ29jR2l0UmVtb3ZlZFNpZ24gR2l0R3V0dGVyRGVsZXRlCmhpZ2hsaWdodCEgbGluayBDb2NHaXRUb3BSZW1vdmVkU2lnbiBHaXRHdXR0ZXJEZWxldGUKaGlnaGxpZ2h0ISBsaW5rIENvY0V4cGxvcmVyQnVmZmVyUm9vdCBSZWQKaGlnaGxpZ2h0ISBsaW5rIENvY0V4cGxvcmVyQnVmZmVyRXhwYW5kSWNvbiBCbHVlCmhpZ2hsaWdodCEgbGluayBDb2NFeHBsb3JlckJ1ZmZlckJ1Zm5yIFllbGxvdwpoaWdobGlnaHQhIGxpbmsgQ29jRXhwbG9yZXJCdWZmZXJNb2RpZmllZCBSZWQKaGlnaGxpZ2h0ISBsaW5rIENvY0V4cGxvcmVyQnVmZmVyQnVmbmFtZSBHcmV5CmhpZ2hsaWdodCEgbGluayBDb2NFeHBsb3JlckJ1ZmZlckZ1bGxwYXRoIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIENvY0V4cGxvcmVyRmlsZVJvb3QgUmVkCmhpZ2hsaWdodCEgbGluayBDb2NFeHBsb3JlckZpbGVFeHBhbmRJY29uIEJsdWUKaGlnaGxpZ2h0ISBsaW5rIENvY0V4cGxvcmVyRmlsZUZ1bGxwYXRoIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIENvY0V4cGxvcmVyRmlsZURpcmVjdG9yeSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgQ29jRXhwbG9yZXJGaWxlR2l0U3RhZ2UgQmx1ZQpoaWdobGlnaHQhIGxpbmsgQ29jRXhwbG9yZXJGaWxlR2l0VW5zdGFnZSBZZWxsb3cKaGlnaGxpZ2h0ISBsaW5rIENvY0V4cGxvcmVyRmlsZVNpemUgQmx1ZQpoaWdobGlnaHQhIGxpbmsgQ29jRXhwbG9yZXJUaW1lQWNjZXNzZWQgUHVycGxlCmhpZ2hsaWdodCEgbGluayBDb2NFeHBsb3JlclRpbWVDcmVhdGVkIFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgQ29jRXhwbG9yZXJUaW1lTW9kaWZpZWQgUHVycGxlCmhpZ2hsaWdodCEgbGluayBDb2NFeHBsb3JlckZpbGVSb290TmFtZSBPcmFuZ2UKaGlnaGxpZ2h0ISBsaW5rIENvY0V4cGxvcmVyQnVmZmVyTmFtZVZpc2libGUgR3JlZW4KIiB9fX0KIiBkZW5zZS1hbmFseXNpcy9hbGV7e3sKY2FsbCBzOkhMKCdBTEVFcnJvcicsIHM6cGFsZXR0ZS5ub25lLCBzOnBhbGV0dGUubm9uZSwgJ3VuZGVyY3VybCcsIHM6cGFsZXR0ZS5yZWQpCmNhbGwgczpITCgnQUxFV2FybmluZycsIHM6cGFsZXR0ZS5ub25lLCBzOnBhbGV0dGUubm9uZSwgJ3VuZGVyY3VybCcsIHM6cGFsZXR0ZS55ZWxsb3cpCmNhbGwgczpITCgnQUxFSW5mbycsIHM6cGFsZXR0ZS5ub25lLCBzOnBhbGV0dGUubm9uZSwgJ3VuZGVyY3VybCcsIHM6cGFsZXR0ZS5ibHVlKQppZiBzOmNvbmZpZ3VyYXRpb24udHJhbnNwYXJlbnRfYmFja2dyb3VuZAogIGNhbGwgczpITCgnQUxFRXJyb3JTaWduJywgczpwYWxldHRlLnJlZCwgczpwYWxldHRlLm5vbmUpCiAgY2FsbCBzOkhMKCdBTEVXYXJuaW5nU2lnbicsIHM6cGFsZXR0ZS55ZWxsb3csIHM6cGFsZXR0ZS5ub25lKQogIGNhbGwgczpITCgnQUxFSW5mb1NpZ24nLCBzOnBhbGV0dGUuYmx1ZSwgczpwYWxldHRlLm5vbmUpCmVsc2UKICBjYWxsIHM6SEwoJ0FMRUVycm9yU2lnbicsIHM6cGFsZXR0ZS5yZWQsIHM6cGFsZXR0ZS5iZzEpCiAgY2FsbCBzOkhMKCdBTEVXYXJuaW5nU2lnbicsIHM6cGFsZXR0ZS55ZWxsb3csIHM6cGFsZXR0ZS5iZzEpCiAgY2FsbCBzOkhMKCdBTEVJbmZvU2lnbicsIHM6cGFsZXR0ZS5ibHVlLCBzOnBhbGV0dGUuYmcxKQplbmRpZgpoaWdobGlnaHQhIGxpbmsgQUxFVmlydHVhbFRleHRFcnJvciBHcmV5CmhpZ2hsaWdodCEgbGluayBBTEVWaXJ0dWFsVGV4dFdhcm5pbmcgR3JleQpoaWdobGlnaHQhIGxpbmsgQUxFVmlydHVhbFRleHRJbmZvIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIEFMRVZpcnR1YWxUZXh0U3R5bGVFcnJvciBBTEVWaXJ0dWFsVGV4dEVycm9yCmhpZ2hsaWdodCEgbGluayBBTEVWaXJ0dWFsVGV4dFN0eWxlV2FybmluZyBBTEVWaXJ0dWFsVGV4dFdhcm5pbmcKIiB9fX0KIiBuZW9tYWtlL25lb21ha2V7e3sKaGlnaGxpZ2h0ISBsaW5rIE5lb21ha2VFcnJvciBBTEVFcnJvcgpoaWdobGlnaHQhIGxpbmsgTmVvbWFrZUVycm9yU2lnbiBBTEVFcnJvclNpZ24KaGlnaGxpZ2h0ISBsaW5rIE5lb21ha2VXYXJuaW5nIEFMRVdhcm5pbmcKaGlnaGxpZ2h0ISBsaW5rIE5lb21ha2VXYXJuaW5nU2lnbiBBTEVXYXJuaW5nU2lnbgpoaWdobGlnaHQhIGxpbmsgTmVvbWFrZUluZm8gQUxFSW5mbwpoaWdobGlnaHQhIGxpbmsgTmVvbWFrZUluZm9TaWduIEFMRUluZm9TaWduCmhpZ2hsaWdodCEgbGluayBOZW9tYWtlTWVzc2FnZSBBTEVJbmZvCmhpZ2hsaWdodCEgbGluayBOZW9tYWtlTWVzc2FnZVNpZ24gQ29jSGludFNpZ24KaGlnaGxpZ2h0ISBsaW5rIE5lb21ha2VWaXJ0dWFsdGV4dEVycm9yIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIE5lb21ha2VWaXJ0dWFsdGV4dFdhcm5pbmcgR3JleQpoaWdobGlnaHQhIGxpbmsgTmVvbWFrZVZpcnR1YWx0ZXh0SW5mbyBHcmV5CmhpZ2hsaWdodCEgbGluayBOZW9tYWtlVmlydHVhbHRleHRNZXNzYWcgR3JleQoiIH19fQoiIHZpbS1zeW50YXN0aWMvc3ludGFzdGlje3t7CmhpZ2hsaWdodCEgbGluayBTeW50YXN0aWNFcnJvciBBTEVFcnJvcgpoaWdobGlnaHQhIGxpbmsgU3ludGFzdGljV2FybmluZyBBTEVXYXJuaW5nCmhpZ2hsaWdodCEgbGluayBTeW50YXN0aWNFcnJvclNpZ24gQUxFRXJyb3JTaWduCmhpZ2hsaWdodCEgbGluayBTeW50YXN0aWNXYXJuaW5nU2lnbiBBTEVXYXJuaW5nU2lnbgoiIH19fQoiIFlnZ2Ryb290L0xlYWRlckZ7e3sKaWYgIWV4aXN0cygnZzpMZl9TdGxDb2xvcnNjaGVtZScpCiAgbGV0IGc6TGZfU3RsQ29sb3JzY2hlbWUgPSAnb25lJwplbmRpZgpjYWxsIHM6SEwoJ0xmX2hsX21hdGNoJywgczpwYWxldHRlLmdyZWVuLCBzOnBhbGV0dGUubm9uZSwgJ2JvbGQnKQpjYWxsIHM6SEwoJ0xmX2hsX21hdGNoMCcsIHM6cGFsZXR0ZS5ncmVlbiwgczpwYWxldHRlLm5vbmUsICdib2xkJykKY2FsbCBzOkhMKCdMZl9obF9tYXRjaDEnLCBzOnBhbGV0dGUuYmx1ZSwgczpwYWxldHRlLm5vbmUsICdib2xkJykKY2FsbCBzOkhMKCdMZl9obF9tYXRjaDInLCBzOnBhbGV0dGUucmVkLCBzOnBhbGV0dGUubm9uZSwgJ2JvbGQnKQpjYWxsIHM6SEwoJ0xmX2hsX21hdGNoMycsIHM6cGFsZXR0ZS55ZWxsb3csIHM6cGFsZXR0ZS5ub25lLCAnYm9sZCcpCmNhbGwgczpITCgnTGZfaGxfbWF0Y2g0JywgczpwYWxldHRlLnB1cnBsZSwgczpwYWxldHRlLm5vbmUsICdib2xkJykKY2FsbCBzOkhMKCdMZl9obF9tYXRjaFJlZmluZScsIHM6cGFsZXR0ZS55ZWxsb3csIHM6cGFsZXR0ZS5ub25lLCAnYm9sZCcpCmhpZ2hsaWdodCEgbGluayBMZl9obF9jdXJzb3JsaW5lIEZnCmhpZ2hsaWdodCEgbGluayBMZl9obF9zZWxlY3Rpb24gRGlmZkFkZApoaWdobGlnaHQhIGxpbmsgTGZfaGxfcmdIaWdobGlnaHQgVmlzdWFsCmhpZ2hsaWdodCEgbGluayBMZl9obF9ndGFnc0hpZ2hsaWdodCBWaXN1YWwKIiB9fX0KIiBqdW5lZ3Vubi9memYudmlte3t7CmxldCBnOmZ6Zl9jb2xvcnMgPSB7CiAgICAgIFwgJ2ZnJzogWydmZycsICdOb3JtYWwnXSwKICAgICAgXCAnYmcnOiBbJ2JnJywgJ05vcm1hbCddLAogICAgICBcICdobCc6IFsnZmcnLCAnR3JlZW4nXSwKICAgICAgXCAnZmcrJzogWydmZycsICdDdXJzb3JMaW5lJywgJ0N1cnNvckNvbHVtbicsICdOb3JtYWwnXSwKICAgICAgXCAnYmcrJzogWydiZycsICdDdXJzb3JMaW5lJywgJ0N1cnNvckNvbHVtbiddLAogICAgICBcICdobCsnOiBbJ2ZnJywgJ0dyZWVuJ10sCiAgICAgIFwgJ2luZm8nOiBbJ2ZnJywgJ1llbGxvdyddLAogICAgICBcICdwcm9tcHQnOiBbJ2ZnJywgJ1JlZCddLAogICAgICBcICdwb2ludGVyJzogWydmZycsICdCbHVlJ10sCiAgICAgIFwgJ21hcmtlcic6IFsnZmcnLCAnQmx1ZSddLAogICAgICBcICdzcGlubmVyJzogWydmZycsICdZZWxsb3cnXSwKICAgICAgXCAnaGVhZGVyJzogWydmZycsICdCbHVlJ10KICAgICAgXCB9CiIgfX19CiIgU2hvdWdvL2Rlbml0ZS5udmlte3t7CmNhbGwgczpITCgnZGVuaXRlTWF0Y2hlZENoYXInLCBzOnBhbGV0dGUuZ3JlZW4sIHM6cGFsZXR0ZS5ub25lLCAnYm9sZCcpCmNhbGwgczpITCgnZGVuaXRlTWF0Y2hlZFJhbmdlJywgczpwYWxldHRlLmdyZWVuLCBzOnBhbGV0dGUubm9uZSwgJ2JvbGQsdW5kZXJsaW5lJykKY2FsbCBzOkhMKCdkZW5pdGVJbnB1dCcsIHM6cGFsZXR0ZS5ncmVlbiwgczpwYWxldHRlLmJnMSwgJ2JvbGQnKQpjYWxsIHM6SEwoJ2Rlbml0ZVN0YXR1c0xpbmVOdW1iZXInLCBzOnBhbGV0dGUucHVycGxlLCBzOnBhbGV0dGUuYmcxKQpjYWxsIHM6SEwoJ2Rlbml0ZVN0YXR1c0xpbmVQYXRoJywgczpwYWxldHRlLmZnLCBzOnBhbGV0dGUuYmcxKQpoaWdobGlnaHQhIGxpbmsgZGVuaXRlU2VsZWN0ZWRMaW5lIEdyZWVuCiIgfX19CiIga2llbi9jdHJscC52aW17e3sKY2FsbCBzOkhMKCdDdHJsUE1hdGNoJywgczpwYWxldHRlLmdyZWVuLCBzOnBhbGV0dGUubm9uZSwgJ2JvbGQnKQpjYWxsIHM6SEwoJ0N0cmxQUHJ0QmFzZScsIHM6cGFsZXR0ZS5ncmV5LCBzOnBhbGV0dGUubm9uZSkKY2FsbCBzOkhMKCdDdHJsUExpbmVQcmUnLCBzOnBhbGV0dGUuZ3JleSwgczpwYWxldHRlLm5vbmUpCmNhbGwgczpITCgnQ3RybFBNb2RlMScsIHM6cGFsZXR0ZS5ibHVlLCBzOnBhbGV0dGUuYmcxLCAnYm9sZCcpCmNhbGwgczpITCgnQ3RybFBNb2RlMicsIHM6cGFsZXR0ZS5iZzEsIHM6cGFsZXR0ZS5ibHVlLCAnYm9sZCcpCmNhbGwgczpITCgnQ3RybFBTdGF0cycsIHM6cGFsZXR0ZS5ncmV5LCBzOnBhbGV0dGUuYmcxLCAnYm9sZCcpCmhpZ2hsaWdodCEgbGluayBDdHJsUE5vRW50cmllcyBSZWQKaGlnaGxpZ2h0ISBsaW5rIEN0cmxQUHJ0Q3Vyc29yIEJsdWUKIiB9fX0KIiBtYWp1dHN1c2hpL3RhZ2Jhcnt7ewpoaWdobGlnaHQhIGxpbmsgVGFnYmFyRm9sZEljb24gQmx1ZQpoaWdobGlnaHQhIGxpbmsgVGFnYmFyU2lnbmF0dXJlIEdyZWVuCmhpZ2hsaWdodCEgbGluayBUYWdiYXJLaW5kIFJlZApoaWdobGlnaHQhIGxpbmsgVGFnYmFyU2NvcGUgT3JhbmdlCmhpZ2hsaWdodCEgbGluayBUYWdiYXJOZXN0ZWRLaW5kIEJsdWUKaGlnaGxpZ2h0ISBsaW5rIFRhZ2JhclZpc2liaWxpdHlQcml2YXRlIFJlZApoaWdobGlnaHQhIGxpbmsgVGFnYmFyVmlzaWJpbGl0eVB1YmxpYyBCbHVlCiIgfX19CiIgbGl1Y2hlbmd4dS92aXN0YS52aW17e3sKaGlnaGxpZ2h0ISBsaW5rIFZpc3RhQnJhY2tldCBHcmV5CmhpZ2hsaWdodCEgbGluayBWaXN0YUNoaWxkcmVuTnIgWWVsbG93CmhpZ2hsaWdodCEgbGluayBWaXN0YVNjb3BlIFJlZApoaWdobGlnaHQhIGxpbmsgVmlzdGFUYWcgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIFZpc3RhUHJlZml4IEdyZXkKaGlnaGxpZ2h0ISBsaW5rIFZpc3RhQ29sb24gR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIFZpc3RhSWNvbiBQdXJwbGUKaGlnaGxpZ2h0ISBsaW5rIFZpc3RhTGluZU5yIEZnCiIgfX19CiIgYWlyYmxhZGUvdmltLWdpdGd1dHRlcnt7ewppZiBzOmNvbmZpZ3VyYXRpb24udHJhbnNwYXJlbnRfYmFja2dyb3VuZAogIGNhbGwgczpITCgnR2l0R3V0dGVyQWRkJywgczpwYWxldHRlLmdyZWVuLCBzOnBhbGV0dGUubm9uZSkKICBjYWxsIHM6SEwoJ0dpdEd1dHRlckNoYW5nZScsIHM6cGFsZXR0ZS5ibHVlLCBzOnBhbGV0dGUubm9uZSkKICBjYWxsIHM6SEwoJ0dpdEd1dHRlckRlbGV0ZScsIHM6cGFsZXR0ZS5yZWQsIHM6cGFsZXR0ZS5ub25lKQogIGNhbGwgczpITCgnR2l0R3V0dGVyQ2hhbmdlRGVsZXRlJywgczpwYWxldHRlLnB1cnBsZSwgczpwYWxldHRlLm5vbmUpCmVsc2UKICBjYWxsIHM6SEwoJ0dpdEd1dHRlckFkZCcsIHM6cGFsZXR0ZS5ncmVlbiwgczpwYWxldHRlLmJnMSkKICBjYWxsIHM6SEwoJ0dpdEd1dHRlckNoYW5nZScsIHM6cGFsZXR0ZS5ibHVlLCBzOnBhbGV0dGUuYmcxKQogIGNhbGwgczpITCgnR2l0R3V0dGVyRGVsZXRlJywgczpwYWxldHRlLnJlZCwgczpwYWxldHRlLmJnMSkKICBjYWxsIHM6SEwoJ0dpdEd1dHRlckNoYW5nZURlbGV0ZScsIHM6cGFsZXR0ZS5wdXJwbGUsIHM6cGFsZXR0ZS5iZzEpCmVuZGlmCiIgfX19CiIgbWhpbnovdmltLXNpZ25pZnl7e3sKaGlnaGxpZ2h0ISBsaW5rIFNpZ25pZnlTaWduQWRkIEdpdEd1dHRlckFkZApoaWdobGlnaHQhIGxpbmsgU2lnbmlmeVNpZ25DaGFuZ2UgR2l0R3V0dGVyQ2hhbmdlCmhpZ2hsaWdodCEgbGluayBTaWduaWZ5U2lnbkRlbGV0ZSBHaXRHdXR0ZXJEZWxldGUKaGlnaGxpZ2h0ISBsaW5rIFNpZ25pZnlTaWduQ2hhbmdlRGVsZXRlIEdpdEd1dHRlckNoYW5nZURlbGV0ZQoiIH19fQoiIHNjcm9vbG9vc2UvbmVyZHRyZWV7e3sKaGlnaGxpZ2h0ISBsaW5rIE5FUkRUcmVlRGlyIEdyZWVuCmhpZ2hsaWdodCEgbGluayBORVJEVHJlZURpclNsYXNoIEdyZWVuCmhpZ2hsaWdodCEgbGluayBORVJEVHJlZU9wZW5hYmxlIEJsdWUKaGlnaGxpZ2h0ISBsaW5rIE5FUkRUcmVlQ2xvc2FibGUgQmx1ZQpoaWdobGlnaHQhIGxpbmsgTkVSRFRyZWVGaWxlIEZnCmhpZ2hsaWdodCEgbGluayBORVJEVHJlZUV4ZWNGaWxlIFJlZApoaWdobGlnaHQhIGxpbmsgTkVSRFRyZWVVcCBHcmV5CmhpZ2hsaWdodCEgbGluayBORVJEVHJlZUNXRCBQdXJwbGUKaGlnaGxpZ2h0ISBsaW5rIE5FUkRUcmVlSGVscCBHcmV5CmhpZ2hsaWdodCEgbGluayBORVJEVHJlZVRvZ2dsZU9uIEdyZWVuCmhpZ2hsaWdodCEgbGluayBORVJEVHJlZVRvZ2dsZU9mZiBSZWQKaGlnaGxpZ2h0ISBsaW5rIE5FUkRUcmVlRmxhZ3MgQmx1ZQpoaWdobGlnaHQhIGxpbmsgTkVSRFRyZWVMaW5rRmlsZSBHcmV5CmhpZ2hsaWdodCEgbGluayBORVJEVHJlZUxpbmtUYXJnZXQgR3JlZW4KIiB9fX0KIiBqdXN0aW5tay92aW0tZGlydmlzaHt7ewpoaWdobGlnaHQhIGxpbmsgRGlydmlzaFBhdGhUYWlsIEJsdWUKaGlnaGxpZ2h0ISBsaW5rIERpcnZpc2hBcmcgWWVsbG93CiIgfX19CiIgdmltLm9yZy9uZXRydyB7e3sKIiBodHRwczovL3d3dy52aW0ub3JnL3NjcmlwdHMvc2NyaXB0LnBocD9zY3JpcHRfaWQ9MTA3NQpoaWdobGlnaHQhIGxpbmsgbmV0cndEaXIgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIG5ldHJ3Q2xhc3NpZnkgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIG5ldHJ3TGluayBHcmV5CmhpZ2hsaWdodCEgbGluayBuZXRyd1N5bUxpbmsgRmcKaGlnaGxpZ2h0ISBsaW5rIG5ldHJ3RXhlIFJlZApoaWdobGlnaHQhIGxpbmsgbmV0cndDb21tZW50IEdyZXkKaGlnaGxpZ2h0ISBsaW5rIG5ldHJ3TGlzdCBZZWxsb3cKaGlnaGxpZ2h0ISBsaW5rIG5ldHJ3SGVscENtZCBCbHVlCmhpZ2hsaWdodCEgbGluayBuZXRyd0NtZFNlcCBHcmV5CmhpZ2hsaWdodCEgbGluayBuZXRyd1ZlcnNpb24gUHVycGxlCiIgfX19CiIgYW5keW1hc3MvdmltLW1hdGNodXB7e3sKY2FsbCBzOkhMKCdNYXRjaFBhcmVuQ3VyJywgczpwYWxldHRlLm5vbmUsIHM6cGFsZXR0ZS5ub25lLCAnYm9sZCcpCmNhbGwgczpITCgnTWF0Y2hXb3JkJywgczpwYWxldHRlLm5vbmUsIHM6cGFsZXR0ZS5ub25lLCAndW5kZXJsaW5lJykKY2FsbCBzOkhMKCdNYXRjaFdvcmRDdXInLCBzOnBhbGV0dGUubm9uZSwgczpwYWxldHRlLm5vbmUsICd1bmRlcmxpbmUnKQoiIH19fQoiIGVhc3ltb3Rpb24vdmltLWVhc3ltb3Rpb24ge3t7CmhpZ2hsaWdodCEgbGluayBFYXN5TW90aW9uVGFyZ2V0IFNlYXJjaApoaWdobGlnaHQhIGxpbmsgRWFzeU1vdGlvblNoYWRlIEdyZXkKIiB9fX0KIiBqdXN0aW5tay92aW0tc25lYWsge3t7CmhpZ2hsaWdodCEgbGluayBTbmVhayBDdXJzb3IKaGlnaGxpZ2h0ISBsaW5rIFNuZWFrTGFiZWwgQ3Vyc29yCmhpZ2hsaWdodCEgbGluayBTbmVha1Njb3BlIERpZmZBZGQKIiB9fX0KIiB0ZXJyeW1hL3ZpbS1tdWx0aXBsZS1jdXJzb3Jze3t7CmhpZ2hsaWdodCEgbGluayBtdWx0aXBsZV9jdXJzb3JzX2N1cnNvciBDdXJzb3IKaGlnaGxpZ2h0ISBsaW5rIG11bHRpcGxlX2N1cnNvcnNfdmlzdWFsIFZpc3VhbAoiIH19fQoiIG1nOTc5L3ZpbS12aXN1YWwtbXVsdGl7e3sKbGV0IGc6Vk1fTW9ub19obCA9ICdDdXJzb3InCmxldCBnOlZNX0V4dGVuZF9obCA9ICdWaXN1YWwnCmxldCBnOlZNX0N1cnNvcl9obCA9ICdDdXJzb3InCmxldCBnOlZNX0luc2VydF9obCA9ICdDdXJzb3InCiIgfX19CiIgZG9taW5pa2R1ZGEvdmltX2N1cnJlbnRfd29yZHt7ewpoaWdobGlnaHQhIGxpbmsgQ3VycmVudFdvcmQgQ29jSGlnaGxpZ2h0VGV4dApoaWdobGlnaHQhIGxpbmsgQ3VycmVudFdvcmRUd2lucyBDb2NIaWdobGlnaHRUZXh0CiIgfX19CiIgUlJldGh5L3ZpbS1pbGx1bWluYXRle3t7CmhpZ2hsaWdodCEgbGluayBpbGx1bWluYXRlZFdvcmQgQ29jSGlnaGxpZ2h0VGV4dAoiIH19fQoiIGl0Y2h5bnkvdmltLWN1cnNvcndvcmR7e3sKaGlnaGxpZ2h0ISBsaW5rIEN1cnNvcldvcmQwIENvY0hpZ2hsaWdodFRleHQKaGlnaGxpZ2h0ISBsaW5rIEN1cnNvcldvcmQxIENvY0hpZ2hsaWdodFRleHQKIiB9fX0KIiBZZ2dkcm9vdC9pbmRlbnRMaW5le3t7CmxldCBnOmluZGVudExpbmVfY29sb3JfZ3VpID0gczpwYWxldHRlLmdyZXlbMF0KbGV0IGc6aW5kZW50TGluZV9jb2xvcl90ZXJtID0gczpwYWxldHRlLmdyZXlbMV0KIiB9fX0KIiBuYXRoYW5hZWxrYW5lL3ZpbS1pbmRlbnQtZ3VpZGVze3t7CmlmIGdldChnOiwgJ2luZGVudF9ndWlkZXNfYXV0b19jb2xvcnMnLCAxKSA9PSAwCiAgY2FsbCBzOkhMKCdJbmRlbnRHdWlkZXNPZGQnLCBzOnBhbGV0dGUuYmcwLCBzOnBhbGV0dGUuYmcxKQogIGNhbGwgczpITCgnSW5kZW50R3VpZGVzRXZlbicsIHM6cGFsZXR0ZS5iZzAsIHM6cGFsZXR0ZS5iZzIpCmVuZGlmCiIgfX19CiIga3NoZW5veS92aW0tc2lnbmF0dXJlIHt7ewppZiBzOmNvbmZpZ3VyYXRpb24udHJhbnNwYXJlbnRfYmFja2dyb3VuZAogIGNhbGwgczpITCgnU2lnbmF0dXJlTWFya1RleHQnLCBzOnBhbGV0dGUuYmx1ZSwgczpwYWxldHRlLm5vbmUpCiAgY2FsbCBzOkhMKCdTaWduYXR1cmVNYXJrZXJUZXh0JywgczpwYWxldHRlLnJlZCwgczpwYWxldHRlLm5vbmUpCmVsc2UKICBjYWxsIHM6SEwoJ1NpZ25hdHVyZU1hcmtUZXh0JywgczpwYWxldHRlLmJsdWUsIHM6cGFsZXR0ZS5iZzEpCiAgY2FsbCBzOkhMKCdTaWduYXR1cmVNYXJrZXJUZXh0JywgczpwYWxldHRlLnJlZCwgczpwYWxldHRlLmJnMSkKZW5kaWYKIiB9fX0KIiBtaGluei92aW0tc3RhcnRpZnl7e3sKaGlnaGxpZ2h0ISBsaW5rIFN0YXJ0aWZ5QnJhY2tldCBHcmV5CmhpZ2hsaWdodCEgbGluayBTdGFydGlmeUZpbGUgR3JlZW4KaGlnaGxpZ2h0ISBsaW5rIFN0YXJ0aWZ5TnVtYmVyIE9yYW5nZQpoaWdobGlnaHQhIGxpbmsgU3RhcnRpZnlQYXRoIEdyZXkKaGlnaGxpZ2h0ISBsaW5rIFN0YXJ0aWZ5U2xhc2ggR3JleQpoaWdobGlnaHQhIGxpbmsgU3RhcnRpZnlTZWN0aW9uIEJsdWUKaGlnaGxpZ2h0ISBsaW5rIFN0YXJ0aWZ5SGVhZGVyIFJlZApoaWdobGlnaHQhIGxpbmsgU3RhcnRpZnlTcGVjaWFsIEdyZXkKIiB9fX0KIiBhcC92aW0tYnVmdGFibGluZXt7ewpoaWdobGlnaHQhIGxpbmsgQnVmVGFiTGluZUN1cnJlbnQgVGFiTGluZVNlbApoaWdobGlnaHQhIGxpbmsgQnVmVGFiTGluZUFjdGl2ZSBUYWJMaW5lCmhpZ2hsaWdodCEgbGluayBCdWZUYWJMaW5lSGlkZGVuIFRhYkxpbmVGaWxsCmhpZ2hsaWdodCEgbGluayBCdWZUYWJMaW5lRmlsbCBUYWJMaW5lRmlsbAoiIH19fQoiIGxpdWNoZW5neHUvdmltLXdoaWNoLWtleXt7ewpoaWdobGlnaHQhIGxpbmsgV2hpY2hLZXkgUmVkCmhpZ2hsaWdodCEgbGluayBXaGljaEtleVNlcGVyYXRvciBHcmVlbgpoaWdobGlnaHQhIGxpbmsgV2hpY2hLZXlHcm91cCBPcmFuZ2UKaGlnaGxpZ2h0ISBsaW5rIFdoaWNoS2V5RGVzYyBCbHVlCiIgfX19CiIgc2t5d2luZDMwMDAvcXVpY2ttZW51LnZpbXt7ewpoaWdobGlnaHQhIGxpbmsgUXVpY2ttZW51T3B0aW9uIEdyZWVuCmhpZ2hsaWdodCEgbGluayBRdWlja21lbnVOdW1iZXIgT3JhbmdlCmhpZ2hsaWdodCEgbGluayBRdWlja21lbnVCcmFja2V0IEdyZXkKaGlnaGxpZ2h0ISBsaW5rIFF1aWNrbWVudUhlbHAgQmx1ZQpoaWdobGlnaHQhIGxpbmsgUXVpY2ttZW51U3BlY2lhbCBHcmV5CmhpZ2hsaWdodCEgbGluayBRdWlja21lbnVIZWFkZXIgUHVycGxlCiIgfX19CiIgbWJiaWxsL3VuZG90cmVle3t7CmNhbGwgczpITCgnVW5kb3RyZWVTYXZlZEJpZycsIHM6cGFsZXR0ZS5yZWQsIHM6cGFsZXR0ZS5ub25lLCAnYm9sZCcpCmhpZ2hsaWdodCEgbGluayBVbmRvdHJlZU5vZGUgQmx1ZQpoaWdobGlnaHQhIGxpbmsgVW5kb3RyZWVOb2RlQ3VycmVudCBQdXJwbGUKaGlnaGxpZ2h0ISBsaW5rIFVuZG90cmVlU2VxIEdyZWVuCmhpZ2hsaWdodCEgbGluayBVbmRvdHJlZUN1cnJlbnQgQmx1ZQpoaWdobGlnaHQhIGxpbmsgVW5kb3RyZWVOZXh0IFllbGxvdwpoaWdobGlnaHQhIGxpbmsgVW5kb3RyZWVUaW1lU3RhbXAgR3JleQpoaWdobGlnaHQhIGxpbmsgVW5kb3RyZWVIZWFkIFB1cnBsZQpoaWdobGlnaHQhIGxpbmsgVW5kb3RyZWVCcmFuY2ggQmx1ZQpoaWdobGlnaHQhIGxpbmsgVW5kb3RyZWVTYXZlZFNtYWxsIFJlZAoiIH19fQoiIHVuYmxldmFibGUvcXVpY2stc2NvcGUge3t7CmNhbGwgczpITCgnUXVpY2tTY29wZVByaW1hcnknLCBzOnBhbGV0dGUuZ3JlZW4sIHM6cGFsZXR0ZS5ub25lLCAndW5kZXJsaW5lJykKY2FsbCBzOkhMKCdRdWlja1Njb3BlU2Vjb25kYXJ5JywgczpwYWxldHRlLmJsdWUsIHM6cGFsZXR0ZS5ub25lLCAndW5kZXJsaW5lJykKIiB9fX0KIiBBUFplbG9zL2JsYW1lci5udmltIHt7ewpoaWdobGlnaHQhIGxpbmsgQmxhbWVyIEdyZXkKIiB9fX0KIiBjb2hhbWEvYWdpdC52aW0ge3t7CmhpZ2hsaWdodCEgbGluayBhZ2l0VHJlZSBHcmV5CmhpZ2hsaWdodCEgbGluayBhZ2l0RGF0ZSBHcmVlbgpoaWdobGlnaHQhIGxpbmsgYWdpdFJlbW90ZSBSZWQKaGlnaGxpZ2h0ISBsaW5rIGFnaXRIZWFkIEJsdWUKaGlnaGxpZ2h0ISBsaW5rIGFnaXRSZWYgT3JhbmdlCmhpZ2hsaWdodCEgbGluayBhZ2l0VGFnIEJsdWUKaGlnaGxpZ2h0ISBsaW5rIGFnaXRTdGF0RmlsZSBCbHVlCmhpZ2hsaWdodCEgbGluayBhZ2l0U3RhdFJlbW92ZWQgUmVkCmhpZ2hsaWdodCEgbGluayBhZ2l0U3RhdEFkZGVkIEdyZWVuCmhpZ2hsaWdodCEgbGluayBhZ2l0U3RhdE1lc3NhZ2UgT3JhbmdlCmhpZ2hsaWdodCEgbGluayBhZ2l0RGlmZlJlbW92ZSBkaWZmUmVtb3ZlZApoaWdobGlnaHQhIGxpbmsgYWdpdERpZmZBZGQgZGlmZkFkZGVkCmhpZ2hsaWdodCEgbGluayBhZ2l0RGlmZkhlYWRlciBCbHVlCmhpZ2hsaWdodCEgbGluayBhZ2l0QXV0aG9yIFllbGxvdwoiIH19fQoiIH19fQoiIFRlcm1pbmFsOiB7e3sKaWYgKGhhcygndGVybWd1aWNvbG9ycycpICYmICZ0ZXJtZ3VpY29sb3JzKSB8fCBoYXMoJ2d1aV9ydW5uaW5nJykKICAiIERlZmluaXRpb24KICBsZXQgczp0ZXJtaW5hbCA9IHsKICAgICAgICBcICdibGFjayc6ICAgIHM6cGFsZXR0ZS5ibGFjaywKICAgICAgICBcICdyZWQnOiAgICAgIHM6cGFsZXR0ZS5yZWQsCiAgICAgICAgXCAneWVsbG93JzogICBzOnBhbGV0dGUueWVsbG93LAogICAgICAgIFwgJ2dyZWVuJzogICAgczpwYWxldHRlLmdyZWVuLAogICAgICAgIFwgJ2N5YW4nOiAgICAgczpwYWxldHRlLm9yYW5nZSwKICAgICAgICBcICdibHVlJzogICAgIHM6cGFsZXR0ZS5ibHVlLAogICAgICAgIFwgJ3B1cnBsZSc6ICAgczpwYWxldHRlLnB1cnBsZSwKICAgICAgICBcICd3aGl0ZSc6ICAgIHM6cGFsZXR0ZS5mZwogICAgICAgIFwgfQogICIgSW1wbGVtZW50YXRpb246IHt7ewogIGlmICFoYXMoJ252aW0nKQogICAgbGV0IGc6dGVybWluYWxfYW5zaV9jb2xvcnMgPSBbczp0ZXJtaW5hbC5ibGFja1swXSwgczp0ZXJtaW5hbC5yZWRbMF0sIHM6dGVybWluYWwuZ3JlZW5bMF0sIHM6dGVybWluYWwueWVsbG93WzBdLAogICAgICAgICAgXCBzOnRlcm1pbmFsLmJsdWVbMF0sIHM6dGVybWluYWwucHVycGxlWzBdLCBzOnRlcm1pbmFsLmN5YW5bMF0sIHM6dGVybWluYWwud2hpdGVbMF0sIHM6dGVybWluYWwuYmxhY2tbMF0sIHM6dGVybWluYWwucmVkWzBdLAogICAgICAgICAgXCBzOnRlcm1pbmFsLmdyZWVuWzBdLCBzOnRlcm1pbmFsLnllbGxvd1swXSwgczp0ZXJtaW5hbC5ibHVlWzBdLCBzOnRlcm1pbmFsLnB1cnBsZVswXSwgczp0ZXJtaW5hbC5jeWFuWzBdLCBzOnRlcm1pbmFsLndoaXRlWzBdXQogIGVsc2UKICAgIGxldCBnOnRlcm1pbmFsX2NvbG9yXzAgPSBzOnRlcm1pbmFsLmJsYWNrWzBdCiAgICBsZXQgZzp0ZXJtaW5hbF9jb2xvcl8xID0gczp0ZXJtaW5hbC5yZWRbMF0KICAgIGxldCBnOnRlcm1pbmFsX2NvbG9yXzIgPSBzOnRlcm1pbmFsLmdyZWVuWzBdCiAgICBsZXQgZzp0ZXJtaW5hbF9jb2xvcl8zID0gczp0ZXJtaW5hbC55ZWxsb3dbMF0KICAgIGxldCBnOnRlcm1pbmFsX2NvbG9yXzQgPSBzOnRlcm1pbmFsLmJsdWVbMF0KICAgIGxldCBnOnRlcm1pbmFsX2NvbG9yXzUgPSBzOnRlcm1pbmFsLnB1cnBsZVswXQogICAgbGV0IGc6dGVybWluYWxfY29sb3JfNiA9IHM6dGVybWluYWwuY3lhblswXQogICAgbGV0IGc6dGVybWluYWxfY29sb3JfNyA9IHM6dGVybWluYWwud2hpdGVbMF0KICAgIGxldCBnOnRlcm1pbmFsX2NvbG9yXzggPSBzOnRlcm1pbmFsLmJsYWNrWzBdCiAgICBsZXQgZzp0ZXJtaW5hbF9jb2xvcl85ID0gczp0ZXJtaW5hbC5yZWRbMF0KICAgIGxldCBnOnRlcm1pbmFsX2NvbG9yXzEwID0gczp0ZXJtaW5hbC5ncmVlblswXQogICAgbGV0IGc6dGVybWluYWxfY29sb3JfMTEgPSBzOnRlcm1pbmFsLnllbGxvd1swXQogICAgbGV0IGc6dGVybWluYWxfY29sb3JfMTIgPSBzOnRlcm1pbmFsLmJsdWVbMF0KICAgIGxldCBnOnRlcm1pbmFsX2NvbG9yXzEzID0gczp0ZXJtaW5hbC5wdXJwbGVbMF0KICAgIGxldCBnOnRlcm1pbmFsX2NvbG9yXzE0ID0gczp0ZXJtaW5hbC5jeWFuWzBdCiAgICBsZXQgZzp0ZXJtaW5hbF9jb2xvcl8xNSA9IHM6dGVybWluYWwud2hpdGVbMF0KICBlbmRpZgogICIgfX19CmVuZGlmCiIgfX19CgoiIHZpbTogc2V0IHN3PTIgdHM9MiBzdHM9MiBldCB0dz04MCBmdD12aW0gZmRtPW1hcmtlciBmbXI9e3t7LH19fToK" | base64 -d > ~/.local/share/nvim/plugged/tokyonight-vim/colors/tokyonight.vim

# Creating a link of nvim 
sudo ln -s /usr/local/bin/v $(which nvim) &>/dev/null
sudo chmod +x /usr/local/bin/v
echo "[*](COMMAND)=> ${USER}@${HOSTNAME}: v"

